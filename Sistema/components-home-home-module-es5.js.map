{"version":3,"sources":["webpack:///src/app/components/home/document-list/document-item/document-item.component.ts","webpack:///src/app/components/home/document-list/document-item/document-item.component.html","webpack:///src/app/components/home/documentos/documentos-secretos/documentos-secretos.component.ts","webpack:///src/app/components/home/documentos/documentos-secretos/documentos-secretos.component.html","webpack:///src/app/components/home/menu/menu.component.html","webpack:///src/app/components/home/menu/menu.component.ts","webpack:///src/app/components/home/documentos/documentos-clasificados/documentos-clasificados.component.ts","webpack:///src/app/components/home/documentos/documentos-clasificados/documentos-clasificados.component.html","webpack:///src/app/components/home/perfil-usuario/perfil-usuario.component.ts","webpack:///src/app/components/home/perfil-usuario/perfil-usuario.component.html","webpack:///src/app/components/home/tables/table-roles-permisos/table-roles-permisos.component.ts","webpack:///src/app/components/home/tables/table-roles-permisos/table-roles-permisos.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///src/app/components/home/home.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/home/tables/table-users/table-users.component.ts","webpack:///src/app/components/home/tables/table-users/table-users.component.html","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///src/app/components/home/home-routing.module.ts","webpack:///src/app/components/home/document-list/document-list.component.html","webpack:///src/app/components/home/document-list/document-list.component.ts","webpack:///src/app/components/home/documentos/documentos-ordina-personales/documentos-ordina-personales.component.ts","webpack:///src/app/components/home/documentos/documentos-ordina-personales/documentos-ordina-personales.component.html","webpack:///src/app/components/home/documentos/documentos-ordinarios/documentos-ordinarios.component.ts","webpack:///src/app/components/home/documentos/documentos-ordinarios/documentos-ordinarios.component.html","webpack:///src/app/components/home/tables/table-roles/table-roles.component.ts","webpack:///src/app/components/home/tables/table-roles/table-roles.component.html","webpack:///src/app/components/home/history-user/history-user.component.ts","webpack:///src/app/components/home/history-user/history-user.component.html","webpack:///src/app/components/home/documentos/documento-limitado/documento-limitado-item/documento-limitado-item.component.ts","webpack:///src/app/components/home/documentos/documento-limitado/documento-limitado-item/documento-limitado-item.component.html","webpack:///src/app/components/home/documentos/documento-limitado/documento-limitado.component.html","webpack:///src/app/components/home/documentos/documento-limitado/documento-limitado.component.ts","webpack:///src/app/components/top-bar/top-bar.component.ts","webpack:///src/app/components/top-bar/top-bar.component.html","webpack:///src/app/components/home/sidenav-home/sidenav-home.component.ts","webpack:///src/app/components/home/sidenav-home/sidenav-home.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js"],"names":["DocumentItemComponent","api","modalService","id","src_document","date","title","description","estado","emisor","estado_text","loading","getDocumentsFoto","subscribe","result","error","url","setTimeout","finishLoading","modal","open","componentInstance","modalHeader","then","emit","size","form_document","descripcion","imagen","modalmessage","modal_action","updateDocument","deleteDocument","DocumentosSecretosComponent","MenuComponent","router","storage","panelOpenState","menu","active","user","retrieve","name","icon","arrow","permit","children","path","is_all","is_read","e","console","log","navigate","undefined","user_id","clear","LogoutUser","saveAccion","err","DocumentosClasificadosComponent","PerfilUsuarioComponent","displayedColumns","resultsLength","isLoadingResults","isRateLimitReached","message_server","rol","permisos","urlImage","usuario","nombre","register_date","register_hour","rol_name","getAvatarUser","toString","full_name","push","granted","is_edit","is_delete","is_create","getUserHistory","length","dataSource","paginator","sort","message","TableRolesPermisosComponent","toppings","toppingList","filter","filtro_usuario","filtro_rol_name","filtro_usuario_view","filtro_rol_name_view","top_bar_title","top_bar_subtitle","top_bar_icon","filtros_row","loadData","ObtenerRolesPermisos","array_permisos","pageIndex","event","row","rol_permiso","trim","toLowerCase","value","indexOf","data","slice","direction","sortedData","a","b","isAsc","compare","registerOrUpdate","filtrarTodo","onChangeSelectFilter","_c0","MatExpansionPanel_ng_template_5_Template","rf","ctx","_c1","_c2","MatExpansionPanelHeader_span_4_Template","ctx_r0","_getExpandedState","_c3","_c4","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","bodyExpansion","height","visibility","MatExpansionPanelContent","_template","ɵfac","MatExpansionPanelContent_Factory","t","ɵdir","type","selectors","ctorParameters","ngDevMode","args","selector","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","ɵ0","MatExpansionPanel","accordion","_changeDetectorRef","_uniqueSelectionDispatcher","_viewContainerRef","_document","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","pipe","x","y","fromState","toState","hideToggle","_togglePosition","togglePosition","expanded","displayMode","_lazyContent","opened","_portal","changes","next","complete","_body","focusedElement","activeElement","bodyElement","nativeElement","contains","MatExpansionPanel_Factory","ɵcmp","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","_t","first","viewQuery","MatExpansionPanel_Query","hostAttrs","hostVars","hostBindings","MatExpansionPanel_HostBindings","_hasSpacing","inputs","disabled","outputs","closed","expandedChange","exportAs","features","provide","useValue","ngContentSelectors","decls","vars","consts","template","MatExpansionPanel_Template","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","directives","styles","encapsulation","animation","changeDetection","decorators","String","propDecorators","None","OnPush","animations","providers","host","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","EMPTY","accordionHideToggleChange","_stateChanges","markForCheck","_containsFocus","focusVia","expandedHeight","collapsedHeight","toggle","isExpanded","_isExpanded","keyCode","preventDefault","_toggle","_handleHeaderKeydown","origin","options","focus","monitor","_handleHeaderFocus","unsubscribe","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_getHeaderHeight","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","show","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","destroy","MatAccordion_Factory","ɵMatAccordion_BaseFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","multi","useExisting","descendants","MatExpansionModule","MatExpansionModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports","HomeModule","forRoot","HomeComponent","TableUserComponent","filtro_nombre","filtro_hora","filtro_nombre_view","filtro_fecha_view","filtro_hora_view","usuario_filtro","ObtenerUsuarios","array_user","ObtenerRolesByUser","form_user","setValue","password","avatar","rol_usuario","confirm","roles2","nextId","CDK_ACCORDION","CdkAccordion","_openCloseAllActions","_multi","CdkAccordion_Factory","nextId$1","CdkAccordionItem","_expansionDispatcher","_openCloseAllSubscription","destroyed","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","notify","CdkAccordionItem_Factory","CdkAccordionModule","CdkAccordionModule_Factory","routes","component","HomeRoutingModule","forChild","DocumentListComponent","subtitle","documentos","documentos_reser","filtro_visivility","filtro","screenWidth","target","innerWidth","screenHeigth","innerHeight","redimensionarListaWidth","redimensionarListaHeigth","screen","breakpoint","heigth","document","getElementById","style","getDocuments","server_message","iniLista","lista","clientWidth","fil","filtroAll","DocumentosOrdinaPersonalesComponent","DocumentosOrdinariosComponent","TableRolesComponent","filtro_description","filtro_description_view","ObtenerRoles","array_roles","description_model","rol_id","HistoryUserComponent","clearInterval","interval","setInterval","getUsersOnline","item","backdrop","username","DocumentoLimitadoItemComponent","fecha","titulo","no","procedencia","movimiento1","movimiento2","destruccion","expediente","observacion","getDocumentsLimitFoto","DocumentoLimitadoComponent","getDocumentsLimit","registerOrUpdateOrDelete","TopBarComponent","modal_icon","modal_subheader","modal_header","withAddButton","SidenavHomeComponent","breakpointObserver","id_usuario","loadingAvatar","isHandset$","observe","Handset","matches","src_avatar","TileCoordinator","columnIndex","rowIndex","lastRowMax","Math","max","tracker","rowCount","numColumns","tiles","Array","fill","positions","map","tile","_trackTile","gapStartIndex","_findMatchingGap","colspan","_markTilePosition","TilePosition","tileCols","Error","gapEndIndex","_nextRow","_findGapEndIndex","i","start","rowspan","col","MAT_GRID_LIST","MatGridTile","_gridList","_rowspan","_colspan","round","property","MatGridTile_Factory","MatGridTile_HostBindings","MatGridTile_Template","MatGridTileText","_lines","MatGridTileText_Factory","MatGridTileText_ContentQueries","MatGridTileText_Template","MatGridAvatarCssMatStyler","MatGridAvatarCssMatStyler_Factory","MatGridTileHeaderCssMatStyler","MatGridTileHeaderCssMatStyler_Factory","MatGridTileFooterCssMatStyler","MatGridTileFooterCssMatStyler_Factory","cssCalcAllowedValue","TileStyler","_rows","gutterSize","cols","_gutterSize","normalizeUnits","_cols","_direction","sizePercent","gutterFraction","baseSize","offset","calc","span","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","getBaseTileSize","side","_setStyle","getTilePosition","getTileSize","tileHeight","FixedTileStyler","fixedRowHeight","test","getTileSpan","getGutterSpan","list","_setListStyle","_tiles","forEach","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_dir","_gutter","_rowHeight","newValue","_setTileStyler","_checkCols","_checkRowHeight","_layoutTiles","rowHeight","_tileStyler","_tileCoordinator","update","init","index","pos","setStyle","getComputedHeight","MatGridList_Factory","MatGridList_ContentQueries","MatGridList_HostBindings","MatGridList_Template","MatGridListModule","MatGridListModule_Factory","ɵTileCoordinator"],"mappings":"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","file":"components-home-home-module-es5.js","sourcesContent":["import { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ModalDocumentComponent } from './../../../modals/modal-document/modal-document.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from './../../../../service/api.service';\r\nimport { Component, OnInit, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-document-item',\r\n  templateUrl: './document-item.component.html',\r\n  styleUrls: ['./document-item.component.css']\r\n})\r\nexport class DocumentItemComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() id: number = -1;\r\n  @Input() src_document: string = './../../../../../ctc.png';\r\n  @Input() date: string = '';\r\n  @Input() title: string = '';\r\n  @Input() description: string = '';\r\n  @Input() estado: boolean = false;\r\n  @Output() emisor: EventEmitter<boolean> = new EventEmitter();\r\n  estado_text: string = 'public';\r\n  loading: boolean = false;\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.estado) this.estado_text = 'private';\r\n    this.api.getDocumentsFoto(this.id).subscribe((result) => {\r\n      this.src_document = result + '';\r\n    }, (error) => {\r\n      this.src_document = error.url;\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => { this.finishLoading() }, 1500);\r\n  }\r\n\r\n  deleteDocument() {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"Documento\";\r\n    modal.componentInstance.id = this.id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.emisor.emit(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDocument() {\r\n    const modal = this.modalService.open(ModalDocumentComponent, { size: 'sm' });\r\n    let form_document = new FormGroup({\r\n      id: new FormControl(this.id),\r\n      title: new FormControl(this.title),\r\n      descripcion: new FormControl(this.description),\r\n      imagen: new FormControl(this.title + '.jpg'),\r\n      date: new FormControl(this.date),\r\n    });\r\n    modal.componentInstance.modalHeader = \"documentos\";\r\n    modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n    modal.componentInstance.modal_action = \"Editar\";\r\n    modal.componentInstance.form_document = form_document;\r\n    modal.componentInstance.src_document = this.src_document;\r\n    modal.componentInstance.estado = this.estado;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.emisor.emit(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  finishLoading() {\r\n    this.loading = true;\r\n  }\r\n}\r\n","<mat-card class=\"bg-darkest item-document\" style=\"width: 400px;height: 300px;max-width: 270px;\">\r\n    <mat-card-header>\r\n        <mat-icon id=\"icon\" matTooltip=\"{{estado_text}}\" name=\"icon\" class=\"text-danger\" *ngIf=\"estado\" mat-card-avatar>\r\n            bookmark</mat-icon>\r\n        <mat-icon id=\"icon\" matTooltip=\"{{estado_text}}\" name=\"icon\" class=\"text-success\" *ngIf=\"!estado\" mat-card-avatar>\r\n            bookmark</mat-icon>\r\n        <mat-card-title style=\"font-size: medium;color: #f44336;\">{{title}}</mat-card-title>\r\n        <mat-card-subtitle style=\"font-size: xx-small; color: white;\">{{date}}</mat-card-subtitle>\r\n        <button mat-icon-button style=\"position: absolute;right: 5px;top: 5px;\" [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n        <mat-menu #menu=\"matMenu\" class=\"bg-dark\">\r\n            <button mat-menu-item (click)=\"updateDocument()\" style=\"color: white;\">actualizar</button>\r\n            <button mat-menu-item (click)=\"deleteDocument()\" style=\"color: white;\">eliminar</button>\r\n        </mat-menu>\r\n    </mat-card-header>\r\n    <div class=\"text-center\">\r\n        <img class=\"img-thumbnail\" style=\"height: 150px;width: 100%;\" [src]=\"src_document\">\r\n    </div>\r\n    <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\" matTooltip=\"{{description}}\">\r\n        {{description}}\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"start\">\r\n        <!-- <button mat-button >Action1</button> -->\r\n    </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-secretos',\n  templateUrl: './documentos-secretos.component.html',\n  styleUrls: ['./documentos-secretos.component.css']\n})\nexport class DocumentosSecretosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-secretos works!</p>\n","<mat-accordion *ngFor=\"let item of menu\" multi>\r\n    <mat-expansion-panel class=\"mat-elevation-z0 borde-left-warn\" hideToggle (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [hidden]=\"!item.permit\">\r\n        <mat-expansion-panel-header (click)=\"navigateTo(item.path)\">\r\n            <mat-panel-title class=\"menu-item\" routerLinkActive=\"mat-icon-active\">\r\n                <mat-icon class=\"font-title-menu\" mat-list-icon>{{item.icon}}</mat-icon>\r\n                <span class=\"font-title-menu\" style=\"margin-left: 10px;\">{{item.name}}</span>\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n                <mat-icon *ngIf=\"item.arrow\" class=\"font-title-menu\">keyboard_arrow_down</mat-icon>\r\n            </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <mat-nav-list style=\"margin-top: -15px;margin-bottom: -30px;\" class=\"borde-left-warn\">\r\n            <div>\r\n                <ng-container *ngFor=\"let hijo of item.children\">\r\n                    <ng-container>\r\n                        <mat-list-item routerLinkActive=\"mat-icon-active\" style=\"margin-left: -25px;font-size: 14px;margin-top: -15px\">\r\n                            <div class=\"container\">\r\n                                <div class=\"row\">\r\n                                    <div style=\"background-color: #ff5722;width: 2px;\" *ngIf=\"active == hijo.path\"></div>\r\n                                    <mat-subheader class=\"menu-item\" mat-list-item (click)=\"navigateTo(hijo.path)\" mat-line>\r\n                                        <mat-icon mat-list-icon style=\"margin-left: 10px;font-size: 15px;\">{{hijo.icon}}</mat-icon>\r\n                                        <span style=\"margin-left: 3px;\">{{hijo.name}}</span>\r\n                                    </mat-subheader>\r\n                                </div>\r\n                            </div>\r\n                        </mat-list-item>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </mat-nav-list>\r\n\r\n        <!-- <div *ngFor=\"let hijo of item.children\" class=\"menu-subitem\">\r\n      <mat-subheader (click)=\"navigateTo(hijo.path)\"><mat-icon>{{hijo.icon}}</mat-icon>{{hijo.name}}</mat-subheader>\r\n    </div> -->\r\n    </mat-expansion-panel>\r\n</mat-accordion>","import { ApiService } from './../../../service/api.service';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  panelOpenState = true;\r\n  menu: any[] = []\r\n  active: string = '';\r\n\r\n  constructor(private router: Router, private storage: SessionStorageService, private api: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    try {\r\n      const user = this.storage.retrieve('usuario');\r\n      this.menu = [\r\n        {\r\n          name: 'Perfil',\r\n          icon: 'contact_mail',\r\n          arrow: true,\r\n          permit: true,\r\n          children: [\r\n            { name: 'Perfil', icon: 'contact_mail', path: 'perfil' },\r\n          ]\r\n        },\r\n        {\r\n          name: 'Administracion',\r\n          icon: 'supervisor_account',\r\n          arrow: true,\r\n          permit: user.is_all == 1,\r\n          children: [\r\n            { name: 'usuarios', icon: 'person', path: 'users', permit: user.is_all == 1, },\r\n            { name: 'roles', icon: 'account_box', path: 'roles', permit: user.is_all == 1, },\r\n            { name: 'permisos', icon: 'perm_identity', path: 'roles-permisos', permit: user.is_all == 1, },\r\n            { name: 'historial', icon: 'event_note', path: 'historial', permit: user.is_all == 1, },\r\n          ]\r\n        },\r\n        {\r\n          name: 'Documentos',\r\n          icon: 'books',\r\n          arrow: true,\r\n          permit: user.is_read == 1,\r\n          children: [\r\n            { name: 'limitados', icon: 'article', path: 'documentos-limitados', permit: user.is_read == 1, },\r\n            { name: 'secretos', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n            { name: 'ordinarios personales', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n            { name: 'clasificados', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n            { name: 'ordinarios', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n          ]\r\n        },\r\n        // {\r\n        //   name: 'Configuracion',\r\n        //   icon: 'settings',\r\n        //   arrow: true,\r\n        //   permit: true,\r\n        //   children: [\r\n        //     { name: 'preferencias', icon: 'build', path: 'menu', permit: true, },\r\n        //     { name: 'conexxion', icon: 'network_cell', path: 'top', permit: true, }\r\n        //   ]\r\n        // },\r\n        {\r\n          name: 'Logout',\r\n          icon: 'exit_to_app',\r\n          path: 'logout',\r\n          permit: true,\r\n        }\r\n      ]\r\n    } catch (e) {\r\n      console.log('Error', e);\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  /**click sobre uno de los children */\r\n  navigateTo(path) {\r\n    console.log('click', path);\r\n    if(path != undefined)  this.active = path;\r\n    if (path) {\r\n      const user_id = this.storage.retrieve('usuario').id;\r\n      if (path == 'logout') {\r\n        const user_id = this.storage.retrieve('usuario').id;\r\n        this.storage.clear();\r\n        this.router.navigate(['']);\r\n        this.api.LogoutUser(user_id).subscribe((result) => {\r\n          console.log('Logout: ', result);\r\n        })\r\n      } else {\r\n        this.api.saveAccion(user_id, 'Entro a la sesion ' + path).subscribe((result) => {\r\n          this.router.navigate(['home/' + path]);\r\n        }, (err) => {\r\n          console.log(err);\r\n          this.router.navigate(['home/' + path]);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-clasificados',\n  templateUrl: './documentos-clasificados.component.html',\n  styleUrls: ['./documentos-clasificados.component.css']\n})\nexport class DocumentosClasificadosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-clasificados works!</p>\n","import { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ApiService } from './../../../service/api.service';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UserHistory } from 'src/app/models/userhistory';\n\n\n@Component({\n  selector: 'app-perfil-usuario',\n  templateUrl: './perfil-usuario.component.html',\n  styleUrls: ['./perfil-usuario.component.css']\n})\n\nexport class PerfilUsuarioComponent implements OnInit {\n\n  constructor(private storage: SessionStorageService, private api: ApiService) { }\n\n  displayedColumns: string[] = ['id', 'user', 'accion', 'fecha'];\n  dataSource: MatTableDataSource<UserHistory>;\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  message_server: string = '';\n  user: string = '';\n  rol: string = 'Historial de acciones';\n  src_avatar : any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  permisos: any[] = [];\n  urlImage = 'ctc.png';\n  usuario: string = '';\n  nombre: string = '';\n  register_date: string = '';\n  register_hour: string = '';\n  rol_name: string = '';\n\n  ngOnInit() {\n    const user = this.storage.retrieve('usuario');\n    console.log(user );\n    this.api.getAvatarUser(user.id).subscribe((result)=>{\n      this.urlImage = result.toString();\n    },(error)=>{\n      this.urlImage = error.url;\n    });\n    this.usuario = user.user;\n    this.nombre = user.full_name;\n    this.register_date = user.register_date;\n    this.register_hour = user.register_hour;\n    this.rol_name = user.rol_name;\n    this.permisos.push({ icon: 'done_all', name: 'permiso de todo', granted: user.is_all == 1})\n    this.permisos.push({ icon: 'library_books', name: 'permiso de lectura', granted: user.is_read == 1})\n    this.permisos.push({ icon: 'edit', name: 'permiso de escritura', granted: user.is_edit == 1})\n    this.permisos.push({ icon: 'delete_sweep', name: 'permiso de eliminacion', granted: user.is_delete == 1})\n    this.permisos.push({ icon: 'create_new_folder', name: 'permiso de creacion', granted: user.is_create == 1})\n\n    this.api.getUserHistory(user.id).subscribe((result) => {\n      if (result.length > 0) {\n        this.dataSource = new MatTableDataSource(result);\n        this.resultsLength = result.length;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.isLoadingResults = false;\n      }\n      else {\n        this.dataSource = new MatTableDataSource([]);\n        this.resultsLength = 0;\n        this.isRateLimitReached = true;\n        this.isLoadingResults = false;\n        this.message_server = 'El usuario no ha ingresado nunca a la pagina';\n      }\n    }, (error) => {\n      this.message_server = error.error.message;\n      this.isLoadingResults = false;\n      this.isRateLimitReached = true;\n      this.resultsLength = 0;\n    });\n  }\n\n\n}\n","<div class=\"full-container bg-dark\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-grid-list cols=\"4\" rowHeight=\"100px\">\n                <mat-grid-tile [colspan]=\"2\" [rowspan]=\"3\" class=\"bg-dark\">\n                    <mat-card class=\"bg-darkest cont\" style=\"width: 100%;margin-inline: 10px;\">\n                        <mat-card-header>\n                            <mat-card-title style=\"font-size: medium;color: #f44336;\">Datos del usuario</mat-card-title>\n                            <mat-card-subtitle style=\"font-size: xx-small; color: white;\">usuario actual</mat-card-subtitle>\n                        </mat-card-header>\n                        <div class=\"row\">\n                            <div class=\"col-md-5\">\n                                <img class=\"img-thumbnail rounded-circle\" [src]=\"urlImage\" style=\"height: 150px;width: 150px;box-shadow: 2px 2px 2px 2px rgba(0, 0, 0.2, 0);\">\n                            </div>\n                            <div class=\"col-md-7\" style=\"display: flex;flex-direction: column; vertical-align: middle;\">\n                                <div>\n                                    <mat-icon color=\"warn\">person</mat-icon> Usuario: {{usuario}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">text_fields</mat-icon> Nombre: {{nombre}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">date_range</mat-icon> Fecha de registro: {{register_date}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">hourglass_empty</mat-icon> Hora de registro: {{register_hour}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">verified_user</mat-icon> Rol: {{rol_name}}</div>\n                            </div>\n                        </div>\n                        <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n\n                        </mat-card-content>\n                        <mat-card-actions align=\"start\">\n                            <!-- <button mat-button >Action1</button> -->\n                        </mat-card-actions>\n                    </mat-card>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"2\" [rowspan]=\"3\" class=\"bg-dark\">\n                    <mat-card class=\"bg-darkest cont\" style=\"width: 100%;margin-inline: 10px;\">\n                        <mat-card-header>\n                            <mat-card-title style=\"font-size: medium;color: #f44336;\">Permisos del usuario</mat-card-title>\n                            <mat-card-subtitle style=\"font-size: xx-small; color: white;\">usuario actual</mat-card-subtitle>\n                        </mat-card-header>\n                        <div>\n                            <mat-selection-list #shoes [multiple]=\"false\" style=\"overflow-y: auto; height: 150px;\">\n                                <mat-list-option *ngFor=\"let permiso of permisos\" style=\"font-size: small;scrollbar-width: none;height: 25px;\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-2\">\n                                            <mat-icon color=\"warn\" class=\"mat-18\">{{permiso.icon}}</mat-icon>\n                                        </div>\n                                        <div class=\"col-md-8\" style=\"color: white;\">\n                                            <label>{{permiso.name}}</label>\n                                        </div>\n                                        <div class=\"col-md-2\">\n                                            <mat-icon class=\"mat-18 text-success\" *ngIf=\"permiso.granted\">check</mat-icon>\n                                            <mat-icon class=\"mat-18 text-danger\" *ngIf=\"!permiso.granted\">close</mat-icon>\n                                        </div>\n                                    </div>\n                                </mat-list-option>\n                            </mat-selection-list>\n                        </div>\n                        <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n\n                        </mat-card-content>\n                        <mat-card-actions align=\"start\">\n                            <!-- <button mat-button >Action1</button> -->\n                        </mat-card-actions>\n                    </mat-card>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"4\" [rowspan]=\"3\" class=\"bg-dark\">\n                    <mat-card class=\"bg-darkest cont\" style=\"width: 100%;margin-inline: 10px;\">\n                        <mat-card-header>\n                            <mat-card-title style=\"font-size: medium;color: #f44336;\">Historial del usuario</mat-card-title>\n                            <mat-card-subtitle style=\"font-size: xx-small; color: white;\">usuario actual</mat-card-subtitle>\n                        </mat-card-header>\n                        <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n                            <div class=\"full-containers\">\n                                <div class=\"example-container mat-elevation-z0 bg-dark\">\n                                    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n                                        <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n                                        <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                                            {{message_server}}\n                                        </div>\n                                    </div>\n                                    <div class=\"example-container\">\n                                        <div class=\"example-table-container\">\n                                            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                                                <!-- id Column -->\n                                                <ng-container matColumnDef=\"id\">\n                                                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                                                </ng-container>\n\n                                                <!-- user column -->\n                                                <ng-container matColumnDef=\"user\">\n                                                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                                                        {{row.usuario}}</td>\n                                                </ng-container>\n\n                                                <!--accion column -->\n                                                <ng-container matColumnDef=\"accion\">\n                                                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"accion\" *matHeaderCellDef>Accion</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                                                        {{row.accion}}</td>\n                                                </ng-container>\n\n                                                <!-- fecha Column -->\n                                                <ng-container matColumnDef=\"fecha\">\n                                                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Fecha</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                                                        {{row.fecha}}</td>\n                                                </ng-container>\n\n                                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                            </table>\n                                        </div>\n\n                                        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"7\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n                                        </mat-paginator>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-card-content>\n                        <mat-card-actions align=\"start\">\n                            <!-- <button mat-button >Action1</button> -->\n                        </mat-card-actions>\n                    </mat-card>\n                </mat-grid-tile>\n            </mat-grid-list>\n        </div>\n    </div>\n</div>","import { ModalPermisosComponent } from './../../../modals/modal-permisos/modal-permisos.component';\r\nimport { RolesPermisos } from '../../../../models/roles-permisos';\r\nimport { ModalUsuarioComponent } from '../../../modals/modal-usuario/modal-usuario.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Usuarios } from '../../../../models/usuarios';\r\nimport { ApiService } from '../../../../service/api.service';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-table-roles-permisos',\r\n  templateUrl: './table-roles-permisos.component.html',\r\n  styleUrls: ['./table-roles-permisos.component.css']\r\n})\r\n\r\nexport class TableRolesPermisosComponent implements AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'user', 'rol_name', 'is_all', 'is_edit', 'is_create', 'is_read', 'is_delete'];\r\n\r\n  toppings = new FormControl();\r\n\r\n  toppingList: string[] = ['usuario', 'nombre de rol'];\r\n  dataSource: MatTableDataSource<RolesPermisos>;\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  pageEvent: PageEvent;\r\n\r\n  filter: string = '';\r\n  filtro_usuario: string = '';\r\n  filtro_rol_name: string = '';\r\n\r\n\r\n  filtro_usuario_view: boolean = false;\r\n  filtro_rol_name_view: boolean = false;\r\n\r\n  // Top Bar\r\n  top_bar_title: string = \"Permisos\";\r\n  top_bar_subtitle: string = \"Permisos para cada rol\";\r\n  top_bar_icon: string = \"perm_identity\";\r\n\r\n  sortedData: RolesPermisos[];\r\n  array_permisos: RolesPermisos[];\r\n\r\n  filtros_row: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  message_server: string = '';\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.api.ObtenerRolesPermisos(this.filtro_usuario, this.filtro_rol_name).subscribe((result) => {\r\n      if (result.length > 0) {\r\n        this.isLoadingResults = false;\r\n        this.array_permisos = result;\r\n        this.isRateLimitReached = false;\r\n        this.dataSource = new MatTableDataSource(result);\r\n        this.resultsLength = result.length;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      } else {\r\n        this.array_permisos = [];\r\n        this.dataSource = new MatTableDataSource([]);\r\n        this.resultsLength = 0;\r\n        this.isRateLimitReached = true;\r\n        this.isLoadingResults = false;\r\n        this.message_server = \"no hay usuarios con permisos registrados\";\r\n      }\r\n    },\r\n      (error) => {\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = error.error.message;\r\n        // console.log(error)\r\n      });\r\n  }\r\n\r\n  resetPaging(): void {\r\n    this.paginator.pageIndex = 0;\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  actualizarPermisos(row: RolesPermisos) {\r\n    var modal = this.modalService.open(ModalUsuarioComponent);\r\n    modal.componentInstance.modalHeader = \"Permisos\";\r\n    modal.componentInstance.modalmessage = \"Debe al menos modificar uno de los campos\";\r\n    modal.componentInstance.modal_action = \"Editar\";\r\n    modal.componentInstance.rol_permiso.id = row.id;\r\n    modal.componentInstance.rol_permiso.user = row.user;\r\n    modal.componentInstance.rol_permiso.rol_name = row.rol_name;\r\n    modal.componentInstance.rol_permiso.is_all = row.is_all;\r\n    modal.componentInstance.rol_permiso.is_edit = row.is_edit;\r\n    modal.componentInstance.rol_permiso.is_create = row.is_create;\r\n    modal.componentInstance.rol_permiso.is_delete = row.is_delete;\r\n    modal.componentInstance.rol_permiso.is_read = row.is_read;\r\n\r\n\r\n    // Emitir desde el modal contenido de este al cerrarlo\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  eliminarRolPemisos(id: number) {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"RolPermisos\";\r\n    modal.componentInstance.id = id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  filtrarTodo() {\r\n    this.dataSource.filter = this.filter.trim().toLowerCase();\r\n  }\r\n\r\n  // filtrarByUser() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.user.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_usuario.toLocaleLowerCase().trim();\r\n  // }\r\n\r\n  onChangeSelectFilter() {\r\n    this.filtros_row = this.toppings.value.indexOf('usuario') != -1 || this.toppings.value.indexOf('nombre de rol') != -1;\r\n    this.filtro_usuario_view = this.toppings.value.indexOf('usuario') != -1;\r\n    this.filtro_rol_name_view = this.toppings.value.indexOf('nombre de rol') != -1;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.array_permisos.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'id': return compare(a.id, b.id, isAsc);\r\n        case 'user': return compare(a.user, b.user, isAsc);\r\n        case 'rol_name': return compare(a.rol_name, b.rol_name, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  isSearch(): boolean {\r\n    return this.filtro_usuario != '' || this.filtro_rol_name != '';\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n","<div class=\"full-container bg-dark\">\n\n    <app-top-bar [modal_header]=\"top_bar_title\" [modal_icon]=\"top_bar_icon\" [withAddButton]=\"false\" [modal_subheader]=\"top_bar_subtitle\" (emisor)=\"registerOrUpdate($event)\"></app-top-bar>\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                {{message_server}}\n            </div>\n        </div>\n\n        <div class=\"row bg-darkest filtros\" style=\"padding-left: 10px;margin-top: 10px;margin-inline: 0px;\">\n            <div class=\"encabezados-filtros\">\n                <mat-label style=\"margin-left: 10px;\" class=\"font-bold\">Filtro: </mat-label>\n                <mat-form-field appearance=\"outline\" class=\"mat-form-field-busqueda\" color=\"warn\">\n                    <mat-label>Escriba el criterio de busqueda</mat-label>\n                    <input matInput #filterall maxlength=\"20\" placeholder=\"nombre completo....\" [(ngModel)]=\"filter\" (ngModelChange)=\"filtrarTodo()\" name=\"filtrotodo\">\n                    <mat-icon matSuffix>search</mat-icon>\n                    <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                    <!-- <mat-hint>Hint</mat-hint> -->\n                </mat-form-field>\n            </div>\n            <mat-form-field appearance=\"outline\" style=\"margin-top: 20px;\">\n                <mat-label style=\"color: white;\">busquedas avanzadas</mat-label>\n                <mat-select [formControl]=\"toppings\" (selectionChange)=\"onChangeSelectFilter()\" multiple>\n                    <mat-select-trigger style=\"color: white;font-size: 11px;\">\n                        {{toppings.value ? toppings.value[0] : ''}}\n                        <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n          (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n        </span>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <mat-divider></mat-divider>\n        <div class=\"row bg-darkest filtros\" [ngClass]=\"{ 'row-visibility-none':!filtros_row }\" style=\"padding-left: 10px;padding-top: 20px;margin-inline: 0px;\">\n            <mat-form-field *ngIf=\"filtro_usuario_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Usuario</mat-label>\n                <input matInput #user_filter maxlength=\"20\" placeholder=\"usuario\" [(ngModel)]=\"filtro_usuario\" name=\"filtro_usuario\">\n                <mat-icon matSuffix>people</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"filtro_rol_name_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Nombre del rol</mat-label>\n                <input matInput #rol_name_filter maxlength=\"20\" placeholder=\"nombre del rol\" [(ngModel)]=\"filtro_rol_name\" name=\"filtro_rol_name\">\n                <mat-icon matSuffix>account_box</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <button [disabled]=\"!isSearch()\" style=\"height: 40px;margin-top: 10px;\" mat-raised-button color=\"warn\" flex (click)=\"loadData()\"> <mat-icon class=\"mat-18\" >search</mat-icon>Buscar\n          </button>\n\n\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"example-table-container\">\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                <!-- id Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                </ng-container>\n\n                <!-- user Column -->\n                <ng-container matColumnDef=\"user\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.user}}</td>\n                </ng-container>\n\n                <!-- rol_name Column -->\n                <ng-container matColumnDef=\"rol_name\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"rol_name\" *matHeaderCellDef>Nombre del rol</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.rol_name}}</td>\n                </ng-container>\n\n                <!-- is_all Column -->\n                <ng-container matColumnDef=\"is_all\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_all\" *matHeaderCellDef>Permiso de todo</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_all}}</td>\n                </ng-container>\n\n                <!-- is_edit Column -->\n                <ng-container matColumnDef=\"is_edit\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_edit\" *matHeaderCellDef>Permiso editar</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_edit}}</td>\n                </ng-container>\n\n                <!-- is_delete Column -->\n                <ng-container matColumnDef=\"is_delete\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_delete\" *matHeaderCellDef>Permiso borrar</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_delete}}</td>\n                </ng-container>\n\n                <!-- is_create Column -->\n                <ng-container matColumnDef=\"is_create\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_create\" *matHeaderCellDef>Permiso agregar</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_create}}</td>\n                </ng-container>\n\n                <!-- is_read Column -->\n                <ng-container matColumnDef=\"is_read\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_read\" *matHeaderCellDef>Permiso leer</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_read}}</td>\n                </ng-container>\n\n                <!-- action Column -->\n                <ng-container matColumnDef=\"actions\">\n                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                        <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"actualizarPermisos(row)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n                        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"eliminarRolPemisos(row.id)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n                    </td>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </div>\n\n        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"5\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n        </mat-paginator>\n    </div>\n</div>\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n//# sourceMappingURL=expansion.js.map","import { PerfilUsuarioComponent } from './perfil-usuario/perfil-usuario.component';\r\nimport { HistoryUserComponent } from './history-user/history-user.component';\r\nimport { TableRolesComponent } from './tables/table-roles/table-roles.component';\r\nimport { TableRolesPermisosComponent } from './tables/table-roles-permisos/table-roles-permisos.component';\r\nimport { TableUserComponent } from './tables/table-users/table-users.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { HomeComponent } from './home.component';\r\nimport { SidenavHomeComponent } from './sidenav-home/sidenav-home.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { TopBarComponent } from './../top-bar/top-bar.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { DocumentListComponent } from './document-list/document-list.component';\r\nimport { DocumentItemComponent } from './document-list/document-item/document-item.component';\r\nimport { DocumentoLimitadoComponent } from './documentos/documento-limitado/documento-limitado.component';\r\nimport { DocumentosSecretosComponent } from './documentos/documentos-secretos/documentos-secretos.component';\r\nimport { DocumentosOrdinaPersonalesComponent } from './documentos/documentos-ordina-personales/documentos-ordina-personales.component';\r\nimport { DocumentosClasificadosComponent } from './documentos/documentos-clasificados/documentos-clasificados.component';\r\nimport { DocumentosOrdinariosComponent } from './documentos/documentos-ordinarios/documentos-ordinarios.component';\r\nimport { DocumentoLimitadoItemComponent } from './documentos/documento-limitado/documento-limitado-item/documento-limitado-item.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    SidenavHomeComponent,\r\n    MenuComponent,\r\n    TopBarComponent,\r\n    TableUserComponent,\r\n    TableRolesComponent,\r\n    TableRolesPermisosComponent,\r\n    DocumentListComponent,\r\n    DocumentItemComponent,\r\n    HistoryUserComponent,\r\n    PerfilUsuarioComponent,\r\n    DocumentoLimitadoComponent,\r\n    DocumentosSecretosComponent,\r\n    DocumentosOrdinaPersonalesComponent,\r\n    DocumentosClasificadosComponent,\r\n    DocumentosOrdinariosComponent,\r\n    DocumentoLimitadoItemComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HomeRoutingModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatTooltipModule,\r\n    MatProgressSpinnerModule,\r\n    NgxLoadingModule.forRoot({}),\r\n    MatMenuModule,\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n","import { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private storage: LocalStorageService, private router: Router) {\n    try {\n      const user = this.storage.retrieve('usuario');\n    } catch (e) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<app-sidenav-home></app-sidenav-home>\n","import { formatDate } from '@angular/common';\r\nimport { ModalUsuarioComponent } from './../../../modals/modal-usuario/modal-usuario.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Usuarios } from './../../../../models/usuarios';\r\nimport { ApiService } from './../../../../service/api.service';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormControl } from '@angular/forms';\r\nimport { error } from 'protractor';\r\nimport { ToastService } from 'ng-uikit-pro-standard';\r\n\r\n/**\r\n * @title Table retrieving data through HTTP\r\n */\r\n@Component({\r\n  selector: 'table-http-example',\r\n  styleUrls: ['table-users.component.css'],\r\n  templateUrl: 'table-users.component.html'\r\n})\r\n\r\nexport class TableUserComponent implements AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'user', 'full_name', 'register_date', 'register_hour', 'actions'];\r\n\r\n  toppings = new FormControl();\r\n\r\n  toppingList: string[] = ['usuario', 'nombre', 'fecha de registro', 'hora de registro'];\r\n  dataSource: MatTableDataSource<Usuarios>;\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  pageEvent: PageEvent;\r\n\r\n  filter: string = '';\r\n  filtro_usuario: string = '';\r\n  filtro_nombre: string = '';\r\n  filtro_fecha: Date;\r\n  filtro_hora: string = '';\r\n\r\n  filtro_usuario_view: boolean = false;\r\n  filtro_nombre_view: boolean = false;\r\n  filtro_fecha_view: boolean = false;\r\n  filtro_hora_view: boolean = false;\r\n\r\n  // Top Bar\r\n  top_bar_title: string = \"Usuario\";\r\n  top_bar_subtitle: string = \"usuarios registrados en la pagina\";\r\n  top_bar_icon: string = \"people\";\r\n\r\n  sortedData: Usuarios[];\r\n  array_user: Usuarios[];\r\n\r\n  filtros_row: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  message_server: string = '';\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    var usuario_filtro: Usuarios = { 'id': 1, 'user': this.filtro_usuario, 'password': this.filter, 'full_name': this.filtro_nombre, 'register_date': '', 'register_hour': this.filtro_hora, 'avatar': null }\r\n    this.api.ObtenerUsuarios(usuario_filtro).subscribe((result) => {\r\n      this.isLoadingResults = false;\r\n      this.isRateLimitReached = false;\r\n\r\n      if (result.length > 0) {\r\n        this.array_user = result;\r\n        this.dataSource = new MatTableDataSource(result);\r\n        this.resultsLength = result.length;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      else {\r\n        this.array_user = [];\r\n        this.dataSource = new MatTableDataSource([]);\r\n        this.resultsLength = 0;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = \"no hay usuarios registrados\";\r\n      }\r\n    },\r\n      (error) => {\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = error.error.message;\r\n        // console.log(error)\r\n      });\r\n  }\r\n\r\n  resetPaging(): void {\r\n    this.paginator.pageIndex = 0;\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  actualizarUsuario(row: Usuarios) {\r\n    this.api.ObtenerRolesByUser(row.id).subscribe((result)=>{\r\n      var modal = this.modalService.open(ModalUsuarioComponent);\r\n      modal.componentInstance.modalHeader = \"Usuario\";\r\n      modal.componentInstance.modalmessage = \"Debe al menos modificar uno de los campos\";\r\n      modal.componentInstance.modal_action = \"Editar\";\r\n      modal.componentInstance.form_user.setValue({\r\n        id: row.id,\r\n        user: row.user,\r\n        password: row.password,\r\n        full_name: row.full_name,\r\n        register_date: row.register_date,\r\n        register_hour: row.register_hour,\r\n        avatar: row.avatar,\r\n        rol_usuario: result,\r\n        confirm: row.password\r\n      });\r\n      modal.componentInstance.roles2 = result;\r\n\r\n      // Emitir desde el modal contenido de este al cerrarlo\r\n      modal.result.then((result) => {\r\n        if (result) {\r\n          this.loadData();\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  eliminarUser(id: number) {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"Usuario\";\r\n    modal.componentInstance.id = id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  filtrarTodo() {\r\n    this.dataSource.filter = this.filter.trim().toLowerCase();\r\n  }\r\n\r\n  // filtrarByUser() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.user.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_usuario.toLocaleLowerCase().trim();\r\n  // }\r\n\r\n  // filtrarByName() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.full_name.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_nombre.trim().toLocaleLowerCase();\r\n  // }\r\n\r\n  // filtrarByDate() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.register_date.indexOf(filter) != -1;\r\n  //   var fecha = formatDate(this.filtro_fecha, 'dd - MM - yyyy', 'en-US');\r\n  //   this.dataSource.filter = fecha.trim();\r\n  // }\r\n\r\n  // filtrarByHour() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.register_hour.toLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_hora.trim().toLowerCase();\r\n  // }\r\n\r\n  onChangeSelectFilter() {\r\n    this.filtros_row = this.toppings.value.indexOf('usuario') != -1 || this.toppings.value.indexOf('nombre') != -1 || this.toppings.value.indexOf('fecha de registro') != -1 || this.toppings.value.indexOf('hora de registro') != -1;\r\n    this.filtro_usuario_view = this.toppings.value.indexOf('usuario') != -1;\r\n    this.filtro_nombre_view = this.toppings.value.indexOf('nombre') != -1;\r\n    this.filtro_fecha_view = this.toppings.value.indexOf('fecha de registro') != -1;\r\n    this.filtro_hora_view = this.toppings.value.indexOf('hora de registro') != -1;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.array_user.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'id': return compare(a.id, b.id, isAsc);\r\n        case 'user': return compare(a.user, b.user, isAsc);\r\n        case 'full_name': return compare(a.full_name, b.full_name, isAsc);\r\n        case 'register_date': return compare(a.register_date, b.register_date, isAsc);\r\n        case 'register_hour': return compare(a.register_hour, b.register_hour, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  isSearch(): boolean {\r\n    return this.filtro_usuario != '' || this.filtro_nombre != '' || this.filtro_hora != '';\r\n  }\r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n","<div class=\"full-container bg-dark\">\r\n\r\n    <app-top-bar [modal_header]=\"top_bar_title\" [modal_icon]=\"top_bar_icon\" [modal_subheader]=\"top_bar_subtitle\" (emisor)=\"registerOrUpdate($event)\"></app-top-bar>\r\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\r\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\r\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\r\n                {{message_server}}\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row bg-darkest filtros\" style=\"padding-left: 10px;margin-top: 10px;margin-inline: 0px;\">\r\n            <div class=\"encabezados-filtros col-md-3\">\r\n                <mat-label style=\"margin-left: 10px;\" class=\"font-bold\">Filtro: </mat-label>\r\n                <mat-form-field appearance=\"outline\" class=\"mat-form-field-busqueda\" color=\"warn\">\r\n                    <mat-label>Escriba el criterio de busqueda</mat-label>\r\n                    <input matInput #filterall maxlength=\"20\" placeholder=\"nombre completo....\" [(ngModel)]=\"filter\" (ngModelChange)=\"filtrarTodo()\" name=\"filtrotodo\">\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                    <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                    <!-- <mat-hint>Hint</mat-hint> -->\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                <mat-form-field appearance=\"outline\" style=\"margin-top: 20px;\">\r\n                    <mat-label style=\"color: white;\">busquedas avanzadas</mat-label>\r\n                    <mat-select [formControl]=\"toppings\" (selectionChange)=\"onChangeSelectFilter()\" multiple>\r\n                        <mat-select-trigger style=\"color: white;font-size: 11px;\">\r\n                            {{toppings.value ? toppings.value[0] : ''}}\r\n                            <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\r\n            (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\r\n          </span>\r\n                        </mat-select-trigger>\r\n                        <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <mat-divider></mat-divider>\r\n        <div class=\"row bg-darkest filtros\" [ngClass]=\"{ 'row-visibility-none':!filtros_row }\" style=\"padding-left: 10px;padding-top: 20px;margin-inline: 0px;\">\r\n            <mat-form-field *ngIf=\"filtro_usuario_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Usuario</mat-label>\r\n                <input matInput #user maxlength=\"20\" placeholder=\"usuario\" [(ngModel)]=\"filtro_usuario\" name=\"filtro_usuario\">\r\n                <mat-icon matSuffix>people</mat-icon>\r\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                <!-- <mat-hint>Hint</mat-hint> -->\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"filtro_nombre_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Nombre</mat-label>\r\n                <input matInput #full_name_search maxlength=\"20\" placeholder=\"nombre\" [(ngModel)]=\"filtro_nombre\" name=\"filtro_nombre\">\r\n                <mat-icon matSuffix>text_fields</mat-icon>\r\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                <!-- <mat-hint>Hint</mat-hint> -->\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"filtro_fecha_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Fecha</mat-label>\r\n                <input matInput [matDatepicker]=\"datepicker\" [(ngModel)]=\"filtro_fecha\" name=\"filtro_fecha\">\r\n                <mat-datepicker-toggle style=\"color: white;\" matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #datepicker>\r\n                    <mat-datepicker-actions>\r\n                        <button mat-button matDatepickerCancel>Cancel</button>\r\n                        <button mat-raised-button color=\"primary\" matDatepickerApply>Apply</button>\r\n                    </mat-datepicker-actions>\r\n                </mat-datepicker>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"filtro_hora_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Hora</mat-label>\r\n                <input matInput #full_name_search maxlength=\"20\" placeholder=\"hora\" [(ngModel)]=\"filtro_hora\" (ngModelChange)=\"filtrarByHour()\" name=\"filtro_hora\">\r\n                <mat-icon matSuffix>timer</mat-icon>\r\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                <!-- <mat-hint>Hint</mat-hint> -->\r\n            </mat-form-field>\r\n            <button [disabled]=\"!isSearch()\" style=\"height: 40px;margin-top: 10px;\" mat-raised-button color=\"warn\" flex (click)=\"loadData()\"> <mat-icon class=\"mat-18\" >search</mat-icon>Buscar\r\n            </button>\r\n\r\n\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"example-table-container\">\r\n\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\r\n                <!-- id Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n                </ng-container>\r\n\r\n                <!-- user Column -->\r\n                <ng-container matColumnDef=\"user\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.user}}</td>\r\n                </ng-container>\r\n\r\n                <!-- full_name Column -->\r\n                <ng-container matColumnDef=\"full_name\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"full_name\" *matHeaderCellDef>Nombre completo</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.full_name}}</td>\r\n                </ng-container>\r\n\r\n                <!-- register_date Column -->\r\n                <ng-container matColumnDef=\"register_date\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"register_date\" *matHeaderCellDef>Fecha de registro</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.register_date}}</td>\r\n                </ng-container>\r\n\r\n                <!-- register_hour Column -->\r\n                <ng-container matColumnDef=\"register_hour\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"register_hour\" *matHeaderCellDef>Hora de registro</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.register_hour}}</td>\r\n                </ng-container>\r\n\r\n                <!-- action Column -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\r\n                        <button type=\"button\" matTooltip=\"actualizar\" class=\"btn btn-outline-warning\" (click)=\"actualizarUsuario(row)\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n                        <button type=\"button\" matTooltip=\"eliminar\" class=\"btn btn-outline-danger\" (click)=\"eliminarUser(row.id)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </div>\r\n\r\n        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"7\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>","import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n//# sourceMappingURL=accordion.js.map","import { PerfilUsuarioComponent } from './perfil-usuario/perfil-usuario.component';\r\nimport { HistoryUserComponent } from './history-user/history-user.component';\r\nimport { DocumentListComponent } from './document-list/document-list.component';\r\nimport { DocumentoLimitadoComponent } from './documentos/documento-limitado/documento-limitado.component';\r\nimport { TableRolesComponent } from './tables/table-roles/table-roles.component';\r\nimport { TableRolesPermisosComponent } from './tables/table-roles-permisos/table-roles-permisos.component';\r\nimport { TableUserComponent } from './tables/table-users/table-users.component';\r\nimport { TopBarComponent } from './../top-bar/top-bar.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      { path: 'menu', component: MenuComponent },\r\n      { path: 'top', component:TopBarComponent},\r\n      { path: 'users', component:TableUserComponent},\r\n      { path: 'roles', component:TableRolesComponent},\r\n      { path: 'roles-permisos', component:TableRolesPermisosComponent },\r\n      { path: 'documentos', component:DocumentListComponent },\r\n      { path: 'documentos-limitados', component:DocumentoLimitadoComponent },\r\n      { path: 'perfil', component:PerfilUsuarioComponent },\r\n      { path: 'historial', component:HistoryUserComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","<div class=\"bg-dark full-container\">\r\n    <app-top-bar [modal_header]=\"title\" [modal_icon]=\"icon\" [modal_subheader]=\"subtitle\" (emisor)=\"registerOrUpdate($event)\">\r\n    </app-top-bar>\r\n\r\n    <div class=\"row bg-darkest filtros mat-elevation-z4\" style=\"padding: 10px;margin-top: 10px;margin-inline: 0px; height: 70px;\">\r\n        <div class=\"col-md-10\">\r\n            <section class=\"example-section\">\r\n                <label>Visibilidad</label>\r\n                <mat-radio-group style=\"display: block;\" [(ngModel)]=\"filtro_visivility\" (ngModelChange)=\"loadData()\">\r\n                    <mat-radio-button [checked]='true' style=\"margin-right: 10px;color: white;\" value=\"pyp\" color=\"warn\">publico y privado</mat-radio-button>\r\n                    <mat-radio-button style=\"margin-right: 10px;color: white;\" value=\"public\" color=\"warn\">publico</mat-radio-button>\r\n                    <mat-radio-button style=\"margin-right: 10px;color: white;\" value=\"private\" color=\"warn\">privado</mat-radio-button>\r\n                </mat-radio-group>\r\n            </section>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <section style=\"position: absolute; right: 0;margin-right: 15px;\">\r\n                <mat-form-field appearance=\"outline\" color=\"warn\">\r\n                    <mat-label>Filtrar por titulo</mat-label>\r\n                    <input style=\"color: white;\" matInput placeholder=\"Escriba criterio de busqueda ...\" [(ngModel)]=\"filtro\" name=\"filtro\" (ngModelChange)=\"filtroAll()\">\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n            </section>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"lista-document\" id=\"lista\">\r\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\r\n            <div class=\"example-rate-limit-reached\" style=\"color: #f44336;\" *ngIf=\"isRateLimitReached\">\r\n                {{server_message}}\r\n            </div>\r\n        </div>\r\n        <mat-grid-list *ngIf=\"!isLoadingResults\" [cols]=\"breakpoint\" rowHeight=\"1.6:2\" (window:resize)=\"onResize($event)\">\r\n            <mat-grid-tile *ngFor=\"let item of documentos\">\r\n                <app-document-item [estado]=\"item.estado\" [title]=\"item.title\" [description]=\"item.descripcion\" [date]=\"item.date\" [src_document]=\"item.imagen\" [id]=\"item.id\" (emisor)=\"onDelete($event)\">\r\n                </app-document-item>\r\n            </mat-grid-tile>\r\n        </mat-grid-list>\r\n    </div>\r\n</div>\r\n","import { ApiService } from './../../../service/api.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-document-list',\r\n  templateUrl: './document-list.component.html',\r\n  styleUrls: ['./document-list.component.css']\r\n})\r\nexport class DocumentListComponent implements OnInit {\r\n\r\n  title: string = 'Documentos Secretos';\r\n  subtitle: string = 'Vista privada no para todos los usuarios';\r\n  icon: string = 'assignment';\r\n  documentos: any[] = [];\r\n  documentos_reser: any[] = [];\r\n  breakpoint;\r\n  server_message;\r\n  isLoadingResults: boolean = true;\r\n  isRateLimitReached: boolean = false;\r\n  filtro_visivility: string = 'pyp';\r\n  filtro: string = '';\r\n\r\n  constructor(private api: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  onResize(event) {\r\n    const screenWidth = event.target.innerWidth;\r\n    const screenHeigth = event.target.innerHeight;\r\n    this.redimensionarListaWidth(screenWidth);\r\n    this.redimensionarListaHeigth(screenHeigth);\r\n    // this.breakpoint = (event.target.innerWidth <= 500) ? 1 : 4;\r\n  }\r\n\r\n  redimensionarListaWidth(screen) {\r\n    if (screen <= 597) {\r\n      this.breakpoint = 1;\r\n    } else if (screen <= 870) {\r\n      this.breakpoint = 2;\r\n    } else if (screen <= 1085) {\r\n      this.breakpoint = 3;\r\n    } else {\r\n      this.breakpoint = 4;\r\n    }\r\n  }\r\n\r\n  redimensionarListaHeigth(screen) {\r\n    const heigth = screen - 290;\r\n    console.log(heigth);\r\n    document.getElementById(\"lista\").style.height = heigth + 'px';\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.isLoadingResults = true\r\n    this.api.getDocuments(1, this.filtro_visivility).subscribe((result) => {\r\n      if (result.length > 0) {\r\n        this.documentos = result;\r\n        this.documentos_reser = result;\r\n        this.isLoadingResults = false;\r\n      } else {\r\n        this.documentos = [];\r\n        this.documentos_reser = [];\r\n        this.isLoadingResults = false;\r\n        this.server_message = 'No hay documentos en estos momentos';\r\n      }\r\n      this.iniLista();\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.isLoadingResults = false;\r\n      this.isRateLimitReached = true;\r\n      this.server_message = 'El servidor no esta disponible en estos momentos';\r\n      this.iniLista();\r\n    });\r\n  }\r\n\r\n  onDelete(event) {\r\n    this.loadData();\r\n  }\r\n\r\n  iniLista() {\r\n    if (!this.isLoadingResults) {\r\n      var lista = document.getElementById(\"lista\");\r\n      this.redimensionarListaWidth(lista.clientWidth);\r\n      // this.redimensionarListaHeigth(lista.clientHeight);\r\n    }\r\n  }\r\n\r\n  filtroAll() {\r\n    this.documentos = this.documentos_reser.filter(fil => fil.title.toLowerCase().indexOf(this.filtro.toLowerCase()) !== -1);\r\n    // console.log(this.filtro);\r\n    // console.log(this.documentos,\"*******\",this.documentos_reser );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-ordina-personales',\n  templateUrl: './documentos-ordina-personales.component.html',\n  styleUrls: ['./documentos-ordina-personales.component.css']\n})\nexport class DocumentosOrdinaPersonalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-ordina-personales works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-ordinarios',\n  templateUrl: './documentos-ordinarios.component.html',\n  styleUrls: ['./documentos-ordinarios.component.css']\n})\nexport class DocumentosOrdinariosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-ordinarios works!</p>\n","import { ModalPermisosComponent } from './../../../modals/modal-permisos/modal-permisos.component';\r\nimport { ModalRolComponent } from './../../../modals/modal-rol/modal-rol.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from '../../../../service/api.service';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Roles } from 'src/app/models/roles';\r\n\r\n\r\n@Component({\r\n  selector: 'app-table-roles',\r\n  templateUrl: './table-roles.component.html',\r\n  styleUrls: ['./table-roles.component.css']\r\n})\r\nexport class TableRolesComponent implements AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['id', 'rol_name', 'description', 'actions'];\r\n\r\n  toppings = new FormControl();\r\n\r\n  toppingList: string[] = ['description', 'nombre de rol'];\r\n  dataSource: MatTableDataSource<Roles>;\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  pageEvent: PageEvent;\r\n\r\n  filter: string = '';\r\n  filtro_description: string = '';\r\n  filtro_rol_name: string = '';\r\n\r\n\r\n  filtro_description_view: boolean = false;\r\n  filtro_rol_name_view: boolean = false;\r\n\r\n  // Top Bar\r\n  top_bar_title: string = \"Roles\";\r\n  top_bar_subtitle: string = \"Roles registrados\";\r\n  top_bar_icon: string = \"account_box\";\r\n\r\n  sortedData: Roles[];\r\n  array_roles: Roles[];\r\n\r\n  filtros_row: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  message_server: string = '';\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.api.ObtenerRoles(this.filtro_rol_name,this.filtro_description).subscribe((result) => {\r\n      if(result.length>0){\r\n      this.isLoadingResults = false;\r\n      this.array_roles = result;\r\n      this.isRateLimitReached = false;\r\n      this.dataSource = new MatTableDataSource(result);\r\n      this.resultsLength = result.length;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      }else{\r\n        this.array_roles = [];\r\n        this.dataSource = new MatTableDataSource([]);\r\n        this.resultsLength = 0;\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = \"No hay roles registrados\";\r\n      }\r\n    },\r\n      (error) => {\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = error.error.message;\r\n        // console.log(error)\r\n      });\r\n  }\r\n\r\n  resetPaging(): void {\r\n    this.paginator.pageIndex = 0;\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  actualizarRol(row: Roles) {\r\n    var modal = this.modalService.open(ModalRolComponent);\r\n    modal.componentInstance.modalHeader = \"Rol\";\r\n    modal.componentInstance.modalmessage = \"Debe al menos modificar uno de los campos\";\r\n    modal.componentInstance.modal_action = \"Editar\";\r\n    modal.componentInstance.id = row.id;\r\n    modal.componentInstance.rol_name = row.rol_name;\r\n    modal.componentInstance.description_model = row.description;\r\n\r\n\r\n    // Emitir desde el modal contenido de este al cerrarlo\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  eliminarRol(id: number) {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"Rol\";\r\n    modal.componentInstance.id = id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  filtrarTodo() {\r\n    this.dataSource.filter = this.filter.trim().toLowerCase();\r\n  }\r\n\r\n  // filtrarByUser() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.user.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_usuario.toLocaleLowerCase().trim();\r\n  // }\r\n\r\n  onChangeSelectFilter() {\r\n    this.filtros_row = this.toppings.value.indexOf('description') != -1 || this.toppings.value.indexOf('nombre de rol') != -1;\r\n    this.filtro_description_view = this.toppings.value.indexOf('description') != -1;\r\n    this.filtro_rol_name_view = this.toppings.value.indexOf('nombre de rol') != -1;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.array_roles.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'id': return compare(a.id, b.id, isAsc);\r\n        case 'rol_name': return compare(a.rol_name, b.rol_name, isAsc);\r\n        case 'description': return compare(a.description, b.description, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  isSearch(): boolean {\r\n    return this.filtro_description != '' || this.filtro_rol_name != '';\r\n  }\r\n\r\n  asignarPermisos(rol_name: string, rol_id: number){\r\n    var modal = this.modalService.open(ModalPermisosComponent);\r\n    modal.componentInstance.modalHeader = 'Permisos';\r\n    modal.componentInstance.modal_action = 'Asignar';\r\n    modal.componentInstance.rol_name = rol_name;\r\n    modal.componentInstance.rol_id = rol_id;\r\n     // Emitir desde el modal contenido de este al cerrarlo\r\n     modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n","<div class=\"full-container bg-dark\">\n\n    <app-top-bar [modal_header]=\"top_bar_title\" [modal_icon]=\"top_bar_icon\" [modal_subheader]=\"top_bar_subtitle\" (emisor)=\"registerOrUpdate($event)\"></app-top-bar>\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                {{message_server}}\n            </div>\n        </div>\n\n        <div class=\"row bg-darkest filtros\" style=\"padding-left: 10px;margin-top: 10px;margin-inline: 0px;\">\n            <div class=\"encabezados-filtros col-md-3\">\n                <mat-label style=\"margin-left: 10px;\" class=\"font-bold\">Filtro: </mat-label>\n                <mat-form-field appearance=\"outline\" class=\"mat-form-field-busqueda\" color=\"warn\">\n                    <mat-label>Escriba el criterio de busqueda</mat-label>\n                    <input matInput #filterall maxlength=\"20\" placeholder=\"nombre completo....\" [(ngModel)]=\"filter\" (ngModelChange)=\"filtrarTodo()\" name=\"filtrotodo\">\n                    <mat-icon matSuffix>search</mat-icon>\n                    <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                    <!-- <mat-hint>Hint</mat-hint> -->\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-5\">\n                <mat-form-field appearance=\"outline\" style=\"margin-top: 20px;\">\n                    <mat-label style=\"color: white;\">busquedas avanzadas</mat-label>\n                    <mat-select [formControl]=\"toppings\" (selectionChange)=\"onChangeSelectFilter()\" multiple>\n                        <mat-select-trigger style=\"color: white;font-size: 11px;\">\n                            {{toppings.value ? toppings.value[0] : ''}}\n                            <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n        (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n      </span>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <mat-divider></mat-divider>\n        <div class=\"row bg-darkest filtros\" [ngClass]=\"{ 'row-visibility-none':!filtros_row }\" style=\"padding-left: 10px;padding-top: 20px;margin-inline: 0px;\">\n            <mat-form-field *ngIf=\"filtro_description_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Descripcion</mat-label>\n                <input matInput #description_filter maxlength=\"20\" placeholder=\"usuario\" [(ngModel)]=\"filtro_description\" name=\"filtro_description\">\n                <mat-icon matSuffix>description</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"filtro_rol_name_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Nombre del rol</mat-label>\n                <input matInput #rol_name_filter maxlength=\"20\" placeholder=\"nombre del rol\" [(ngModel)]=\"filtro_rol_name\" name=\"filtro_rol_name\">\n                <mat-icon matSuffix>account_box</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <button [disabled]=\"!isSearch()\" style=\"height: 40px;margin-top: 10px;\" mat-raised-button color=\"warn\" flex (click)=\"loadData()\"> <mat-icon class=\"mat-18\" >search</mat-icon>Buscar\n        </button>\n\n\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"example-table-container\">\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                <!-- id Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                </ng-container>\n\n                <!-- rol_name Column -->\n                <ng-container matColumnDef=\"rol_name\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"rol_name\" *matHeaderCellDef>Nombre del rol</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.rol_name}}</td>\n                </ng-container>\n\n                <!-- description Column -->\n                <ng-container matColumnDef=\"description\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"description\" *matHeaderCellDef>Descripcion</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.description}}</td>\n                </ng-container>\n\n                <!-- action Column -->\n                <ng-container matColumnDef=\"actions\">\n                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                        <button type=\"button\" matTooltip=\"Editar\" class=\"btn btn-outline-warning\" (click)=\"actualizarRol(row)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n                        <button type=\"button\" matTooltip=\"Asignar permisos\" class=\"btn btn-outline-success\" (click)=\"asignarPermisos(row.rol_name, row.id)\">\n          <mat-icon>assignment</mat-icon>\n        </button>\n                        <button type=\"button\" matTooltip=\"Eliminar\" class=\"btn btn-outline-danger\" (click)=\"eliminarRol(row.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n                    </td>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </div>\n\n        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"5\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n        </mat-paginator>\n    </div>\n</div>","import { ModalUserHistoryComponent } from './../../modals/modal-user-history/modal-user-history.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { UserOnline } from './../../../models/useronline';\nimport { ApiService } from './../../../service/api.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-history-user',\n  templateUrl: './history-user.component.html',\n  styleUrls: ['./history-user.component.css']\n})\nexport class HistoryUserComponent implements OnInit, OnDestroy {\n\n  displayedColumns: string[] = ['id', 'user', 'estado', 'actions'];\n  dataSource: MatTableDataSource<UserOnline>;\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  message_server: string = 'Hoalasds';\n  interval: any;\n  title: string = 'Historial';\n  icon: string = 'event_note';\n  subtitle: string = 'Muestra el historial de todos los usuarios';\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private api: ApiService, private modalService: NgbModal) { }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.interval = setInterval(() => {\n      this.loadData();\n    }, 5000);\n  }\n\n  loadData() {\n    this.api.getUsersOnline().subscribe((result) => {\n      if (result.length > 0) {\n        this.dataSource = new MatTableDataSource(result);\n        this.resultsLength = result.length;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.isLoadingResults = false;\n      }\n      else {\n        this.dataSource = new MatTableDataSource([]);\n        this.resultsLength = 0;\n        this.isRateLimitReached = true;\n        this.isLoadingResults = false;\n        this.message_server = 'no hay usuarios registrados';\n      }\n    }, (error) => {\n      this.message_server = error.error.message;\n      this.isLoadingResults = false;\n      this.isRateLimitReached = true;\n      this.resultsLength = 0;\n    });\n  }\n\n\n  verHistorial(item) {\n    const modal = this.modalService.open(ModalUserHistoryComponent, {backdrop: 'static'});\n    modal.componentInstance.user_id = item.user_id;\n    modal.componentInstance.user = item.username;\n  }\n}\n","<div class=\"full-container bg-dark\">\n\n    <app-top-bar [modal_header]=\"title\" [modal_icon]=\"icon\" [modal_subheader]=\"subtitle\" [withAddButton]=\"false\">\n    </app-top-bar>\n\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                {{message_server}}\n            </div>\n        </div>\n        <div class=\"example-container mat-elevation-z4 bg-dark\">\n            <div class=\"example-table-container\">\n                <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                    <!-- id Column -->\n                    <ng-container matColumnDef=\"id\">\n                        <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                    </ng-container>\n\n                    <!-- user column -->\n                    <ng-container matColumnDef=\"user\">\n                        <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                            {{row.username}}</td>\n                    </ng-container>\n\n                    <!--state column -->\n                    <ng-container matColumnDef=\"estado\">\n                        <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"estado\" *matHeaderCellDef>Estado</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                            <mat-icon matTooltip=\"activo\" *ngIf=\"row.estado == 'activo'\" class=\"text-success\">wifi</mat-icon>\n                            <mat-icon matTooltip=\"inactivo\" *ngIf=\"row.estado == 'inactivo'\" class=\"text-danger\">signal_wifi_off</mat-icon>\n                        </td>\n                    </ng-container>\n\n                    <!-- action Column -->\n                    <ng-container matColumnDef=\"actions\">\n                        <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                            <button type=\"button\" matTooltip=\"ver historial\" class=\"btn btn-outline-primary\" (click)=\"verHistorial(row)\">\n        <mat-icon>timeline</mat-icon>\n      </button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div>\n\n            <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"7\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n            </mat-paginator>\n\n        </div>\n    </div>","import { FormGroup, FormControl } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalDeleteComponent } from './../../../../modals/modal-delete/modal-delete.component';\nimport { ApiService } from './../../../../../service/api.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ModalDocumentLimitadoComponent } from 'src/app/components/modals/modal-document-limitado/modal-document-limitado.component';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-documento-limitado-item',\n  templateUrl: './documento-limitado-item.component.html',\n  styleUrls: ['./documento-limitado-item.component.css']\n})\nexport class DocumentoLimitadoItemComponent implements OnInit {\n\n  @Input() id: number = -1;\n  @Input() src_document: string = 'ctc.png';\n  @Input() fecha: string = '';\n  @Input() titulo: string = '';\n  @Input() no: number = -1;\n  @Input() procedencia: string = '';\n  @Input() movimiento1: string = '';\n  @Input() movimiento2: string = '';\n  @Input() destruccion: string = '';\n  @Input() expediente: string = '';\n  @Input() observacion: string = '';\n  @Output() emisor: EventEmitter<boolean> = new EventEmitter();\n  constructor(private api: ApiService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n\n    this.api.getDocumentsLimitFoto(this.id).subscribe((result) => {\n      this.src_document = result + '';\n    }, (error) => {\n      this.src_document = error.url;\n    })\n  }\n\n  deleteDocument() {\n    var modal = this.modalService.open(ModalDeleteComponent);\n    modal.componentInstance.modalHeader = \"Documento Limitado\";\n    modal.componentInstance.id = this.id;\n    modal.result.then((result) => {\n      if (result) {\n        this.emisor.emit(true);\n      }\n    });\n  }\n\n  updateDocument() {\n    const modal = this.modalService.open(ModalDocumentLimitadoComponent, { backdrop: false });\n    let form_document = new FormGroup({\n      id: new FormControl(this.id),\n      no: new FormControl(this.no),\n      titulo: new FormControl(this.titulo),\n      fecha: new FormControl(this.fecha),\n      procedencia: new FormControl(this.procedencia),\n      movimiento1: new FormControl(this.movimiento1),\n      movimiento2: new FormControl(this.movimiento2),\n      destruccion: new FormControl(this.destruccion),\n      expediente: new FormControl(this.expediente),\n      observacion: new FormControl(this.observacion),\n      imagen: new FormControl(this.no),\n    });\n    modal.componentInstance.modalHeader = \"Documentos Limitados\";\n    modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\n    modal.componentInstance.modal_action = \"Editar\";\n    modal.componentInstance.form_document = form_document;\n    modal.componentInstance.src_document = this.src_document;\n    modal.result.then((result) => {\n      if (result) {\n        this.emisor.emit(true);\n      }\n    });\n  }\n}\n","<mat-card class=\"bg-darkest item-document\" style=\"width: 400px;height: 300px;max-width: 270px;\">\n    <mat-card-header>\n        <div class=\"bubble\" name=\"no\" class=\"text-danger\" mat-card-avatar>\n        </div>\n\n        <button mat-icon-button style=\"position: absolute;right: 5px;top: 5px;\" [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n        <mat-menu #menu=\"matMenu\" class=\"bg-dark\">\n            <button mat-menu-item (click)=\"updateDocument()\" style=\"color: white;\">actualizar</button>\n            <button mat-menu-item (click)=\"deleteDocument()\" style=\"color: white;\">eliminar</button>\n        </mat-menu>\n    </mat-card-header>\n    <div class=\"text-center\">\n        <img mat-card-image style=\"height: 150px;width: 100%;\" [src]=\"src_document\">\n    </div>\n    <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n        <mat-card-title style=\"font-size: medium;color: #f44336;\">{{titulo}}</mat-card-title>\n        <p>{{fecha}}</p>\n        <p>{{expediente}}</p>\n    </mat-card-content>\n\n    <mat-card-actions align=\"start\">\n        <!-- <button mat-button >Action1</button> -->\n    </mat-card-actions>\n</mat-card>","<div class=\"bg-dark full-container\">\n    <app-top-bar [modal_header]=\"title\" [modal_icon]=\"icon\" [modal_subheader]=\"subtitle\" (emisor)=\"registerOrUpdateOrDelete($event)\">\n    </app-top-bar>\n\n    <div class=\"row bg-darkest filtros mat-elevation-z4\" style=\"padding: 10px;margin-top: 10px;margin-inline: 0px; height: 70px;\">\n        <div class=\"col-md-10\">\n\n        </div>\n        <div class=\"col-md-2\">\n            <section style=\"position: absolute; right: 0;margin-right: 15px;\">\n                <mat-form-field appearance=\"outline\" color=\"warn\">\n                    <mat-label>Filtrar por titulo</mat-label>\n                    <input style=\"color: white;\" matInput placeholder=\"Escriba criterio de busqueda ...\" [(ngModel)]=\"filtro\" name=\"filtro\" (ngModelChange)=\"filtroAll()\">\n                    <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n            </section>\n        </div>\n    </div>\n\n    <div class=\"lista-document\" id=\"lista\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" style=\"color: #f44336;\" *ngIf=\"isRateLimitReached\">\n                {{server_message}}\n            </div>\n        </div>\n        <mat-grid-list *ngIf=\"!isLoadingResults\" [cols]=\"breakpoint\" rowHeight=\"1.6:2\" (window:resize)=\"onResize($event)\">\n            <mat-grid-tile *ngFor=\"let item of documentos\">\n                <app-documento-limitado-item [id]=\"item.id\" [no]=\"item.no\" [titulo]=\"item.titulo\" [fecha]=\"item.fecha\" [procedencia]=\"item.procedencia\" [movimiento1]=\"item.movimiento1\" [movimiento2]=\"item.movimiento2\" [destruccion]=\"item.destruccion\" [expediente]=\"item.expediente\"\n                    [observacion]=\"item.observacion\" (emisor)=\"registerOrUpdateOrDelete($event)\"></app-documento-limitado-item>\n            </mat-grid-tile>\n        </mat-grid-list>\n    </div>\n</div>","import { ApiService } from './../../../../service/api.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documento-limitado',\n  templateUrl: './documento-limitado.component.html',\n  styleUrls: ['./documento-limitado.component.css']\n})\nexport class DocumentoLimitadoComponent implements OnInit {\n\n  title: string = 'Documentos Limitados';\n  subtitle: string = 'Vista privada no para todos los usuarios';\n  icon: string = 'assignment';\n  documentos: any[] = [];\n  documentos_reser: any[] = [];\n  breakpoint;\n  server_message;\n  isLoadingResults: boolean = true;\n  isRateLimitReached: boolean = false;\n  filtro_visivility: string = 'pyp';\n  filtro: string = '';\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  registerOrUpdate(event){\n\n  }\n\n  loadData() {\n    this.isLoadingResults = true\n    this.api.getDocumentsLimit(1).subscribe((result) => {\n      if (result.length > 0) {\n        this.documentos = result;\n        this.documentos_reser = result;\n        this.isLoadingResults = false;\n      } else {\n        this.documentos = [];\n        this.documentos_reser = [];\n        this.isLoadingResults = false;\n        this.server_message = 'No hay documentos en estos momentos';\n      }\n      this.iniLista();\n    }, (error) => {\n      console.log(error);\n      this.isLoadingResults = false;\n      this.isRateLimitReached = true;\n      this.server_message = 'El servidor no esta disponible en estos momentos';\n      this.iniLista();\n    });\n  }\n\n  onResize(event) {\n    const screenWidth = event.target.innerWidth;\n    const screenHeigth = event.target.innerHeight;\n    this.redimensionarListaWidth(screenWidth);\n    this.redimensionarListaHeigth(screenHeigth);\n    // this.breakpoint = (event.target.innerWidth <= 500) ? 1 : 4;\n  }\n\n  redimensionarListaWidth(screen) {\n    if (screen <= 597) {\n      this.breakpoint = 1;\n    } else if (screen <= 870) {\n      this.breakpoint = 2;\n    } else if (screen <= 1085) {\n      this.breakpoint = 3;\n    } else {\n      this.breakpoint = 4;\n    }\n  }\n\n  redimensionarListaHeigth(screen) {\n    const heigth = screen - 290;\n    // console.log(heigth);\n    document.getElementById(\"lista\").style.height = heigth + 'px';\n  }\n\n  iniLista() {\n    if (!this.isLoadingResults) {\n      var lista = document.getElementById(\"lista\");\n      this.redimensionarListaWidth(lista.clientWidth);\n      // this.redimensionarListaHeigth(lista.clientHeight);\n    }\n  }\n\n  onDelete(event) {\n    this.loadData();\n  }\n\n  filtroAll() {\n    this.documentos = this.documentos_reser.filter(fil => fil.title.toLowerCase().indexOf(this.filtro.toLowerCase()) !== -1);\n    // console.log(this.filtro);\n    // console.log(this.documentos,\"*******\",this.documentos_reser );\n  }\n\n  registerOrUpdateOrDelete(event){\n    if(event){\n      this.loadData();\n    }\n  }\n\n}\n","import { ModalDocumentLimitadoComponent } from './../modals/modal-document-limitado/modal-document-limitado.component';\r\nimport { ModalDocumentComponent } from './../modals/modal-document/modal-document.component';\r\nimport { ModalPermisosComponent } from './../modals/modal-permisos/modal-permisos.component';\r\nimport { ModalRolComponent } from './../modals/modal-rol/modal-rol.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { ModalUsuarioComponent } from '../modals/modal-usuario/modal-usuario.component';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n  @Input() modal_icon = 'build';\r\n  @Input() modal_subheader = 'Subtitle';\r\n  @Input() modal_header: string = \"title\";\r\n  @Input() withAddButton: boolean = true;\r\n\r\n  @Output() emisor: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openModal() {\r\n    console.log(this.modal_header);\r\n    switch (this.modal_header) {\r\n      case \"Usuario\":\r\n        var modal = this.modalService.open(ModalUsuarioComponent);\r\n        modal.componentInstance.modalHeader = \"Nuevo usuario\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        // Emitir desde el modal contenido de este al cerrarlo\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case \"Roles\":\r\n        var modal = this.modalService.open(ModalRolComponent);\r\n        modal.componentInstance.modalHeader = \"Nuevo Rol\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        // Emitir desde el modal contenido de este al cerrarlo\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case \"Permisos\":\r\n        var modal = this.modalService.open(ModalPermisosComponent);\r\n        modal.componentInstance.modalHeader = \"permisos\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Asignar\";\r\n        // Emitir desde el modal contenido de este al cerrarlo\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case 'Documentos Secretos':\r\n        var modal = this.modalService.open(ModalDocumentComponent, { size: 'sm' });\r\n        modal.componentInstance.modalHeader = \"documentos\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case 'Documentos Limitados':\r\n        var modal = this.modalService.open(ModalDocumentLimitadoComponent, { backdrop: false});\r\n        modal.componentInstance.modalHeader = \"Documentos limitados\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n      default:\r\n        console.log(\"default\");\r\n    }\r\n  }\r\n\r\n  registerOrUpdate() {\r\n    this.emisor.emit(true);\r\n  }\r\n\r\n}\r\n","<div class=\"back bg-darkest mat-elevation-z4\" style=\"color: black;\">\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n\r\n            <div class=\"row deep-orange\" style=\"height: 35px;\">\r\n                <mat-icon style=\"font-size: 20px; padding-left: 10px;\">{{modal_icon}}</mat-icon>\r\n                <span style=\"font-size: 15px; padding-left: 10px;\">{{modal_header}}</span>\r\n\r\n                <button *ngIf=\"withAddButton\" style=\"padding-left: 10px;\" mat-raised-button color=\"warn\" flex class=\"ml-auto icon-in-menu\" (click)=\"openModal()\">\r\n          <mat-icon class=\"mat-18\">add_box</mat-icon>Agregar {{modal_header}}\r\n        </button>\r\n            </div>\r\n\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","import { Router } from '@angular/router';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\nimport { ApiService } from './../../../service/api.service';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sidenav-home',\r\n  templateUrl: './sidenav-home.component.html',\r\n  styleUrls: ['./sidenav-home.component.css']\r\n})\r\nexport class SidenavHomeComponent implements OnInit, AfterViewInit {\r\n\r\n  id_usuario: number = -1;\r\n  user: string = '';\r\n  rol: string = '';\r\n  nombre: string = '';\r\n  src_avatar;\r\n  loadingAvatar: boolean = false;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private storage: SessionStorageService, private api: ApiService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    try {\r\n      var usuario = this.storage.retrieve('usuario');\r\n      this.id_usuario = usuario.id;\r\n      this.user = usuario.user;\r\n      this.nombre = usuario.full_name;\r\n      this.rol = usuario.rol_name;\r\n\r\n      this.api.getAvatarUser(this.id_usuario).subscribe((result) => {\r\n        this.src_avatar = result;\r\n      }, (error) => {\r\n        this.src_avatar = error.url;\r\n      });\r\n    } catch (e) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.finishLoading();\r\n    }, 1500);\r\n  }\r\n\r\n  finishLoading() {\r\n    this.loadingAvatar = true;\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-content bg-darkest\" style=\"\">\r\n    <mat-sidenav #drawer class=\"sidenav  bg-darkest\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" mode=\"side\" [opened]=\"(isHandset$ | async) === false\" style=\"margin-top: 32px\">\r\n        <mat-toolbar class=\"deep-orange\">\r\n            <!-- <mat-icon class=\"example-header-image\" matTooltip=\"{{nombre}}\">account_circle</mat-icon> -->\r\n            <div class=\"example-loading-shade rounded-circle\" [hidden]=\"loadingAvatar\">\r\n                <mat-spinner color=\"warn\" [hidden]=\"loadingAvatar\" [diameter]=\"50\" class=\"rounded-circle loading\"></mat-spinner>\r\n            </div>\r\n            <img [hidden]=\"!loadingAvatar\" src=\"{{src_avatar}}\" class=\"rounded-circle\" style=\"width: 50px;height: 50px; margin-right: 10px;padding: 0.1px;background-color: white;\" matTooltip=\"{{nombre}}\">\r\n            <div style=\"display: block;\">\r\n                <section style=\"font-size: 15px;\">{{user}}</section>\r\n                <section style=\"font-size: 10px;\">{{rol}}</section>\r\n            </div>\r\n        </mat-toolbar>\r\n        <mat-nav-list>\r\n            <app-menu></app-menu>\r\n            <div style=\"position: absolute;right: 0;left: 0;bottom: 0;margin: 5px;font-size: smaller;\"><strong>Copyright Kuroko 2022</strong>\r\n                <p> version 2.1.00</p>\r\n            </div>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <mat-toolbar class=\"deep-orange\">\r\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n            <span>Sistema</span>\r\n            <!-- <div class=\"login-icon-toolbar\">\r\n              <mat-icon>account_circle</mat-icon>\r\n            </div> -->\r\n        </mat-toolbar>\r\n        <!-- Add Content Here -->\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = \".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\";\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridTile {\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() { return this._rowspan; }\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() { return this._colspan; }\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n        this._element.nativeElement.style[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [_c3], encapsulation: 2, changeDetection: 0 });\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nclass MatGridTileText {\n    constructor(_element) {\n        this._element = _element;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() { return this._cols; }\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() { return this._gutter; }\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() { return this._rowHeight; }\n    set rowHeight(value) {\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n        if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        const tracker = this._tileCoordinator;\n        const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((tile, index) => {\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [_c3], encapsulation: 2, changeDetection: 0 });\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵfac = function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); };\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatLineModule, MatCommonModule], MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList, MatGridTile, MatGridTileText, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList, MatGridTile, MatGridTileText, MatLineModule,\n        MatCommonModule, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map"]}