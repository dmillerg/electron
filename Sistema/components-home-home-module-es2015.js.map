{"version":3,"sources":["./src/app/components/home/document-list/document-item/document-item.component.ts","./src/app/components/home/document-list/document-item/document-item.component.html","./src/app/components/home/documentos/documentos-secretos/documentos-secretos.component.ts","./src/app/components/home/documentos/documentos-secretos/documentos-secretos.component.html","./src/app/components/home/menu/menu.component.html","./src/app/components/home/menu/menu.component.ts","./src/app/components/home/documentos/documentos-clasificados/documentos-clasificados.component.ts","./src/app/components/home/documentos/documentos-clasificados/documentos-clasificados.component.html","./src/app/components/home/perfil-usuario/perfil-usuario.component.ts","./src/app/components/home/perfil-usuario/perfil-usuario.component.html","./src/app/components/home/tables/table-roles-permisos/table-roles-permisos.component.ts","./src/app/components/home/tables/table-roles-permisos/table-roles-permisos.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","./src/app/components/home/home.module.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/home/tables/table-users/table-users.component.ts","./src/app/components/home/tables/table-users/table-users.component.html","./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","./src/app/components/home/home-routing.module.ts","./src/app/components/home/document-list/document-list.component.html","./src/app/components/home/document-list/document-list.component.ts","./src/app/components/home/documentos/documentos-ordina-personales/documentos-ordina-personales.component.ts","./src/app/components/home/documentos/documentos-ordina-personales/documentos-ordina-personales.component.html","./src/app/components/home/documentos/documentos-ordinarios/documentos-ordinarios.component.ts","./src/app/components/home/documentos/documentos-ordinarios/documentos-ordinarios.component.html","./src/app/components/home/tables/table-roles/table-roles.component.ts","./src/app/components/home/tables/table-roles/table-roles.component.html","./src/app/components/home/history-user/history-user.component.ts","./src/app/components/home/history-user/history-user.component.html","./src/app/components/home/documentos/documento-limitado/documento-limitado-item/documento-limitado-item.component.ts","./src/app/components/home/documentos/documento-limitado/documento-limitado-item/documento-limitado-item.component.html","./src/app/components/home/documentos/documento-limitado/documento-limitado.component.html","./src/app/components/home/documentos/documento-limitado/documento-limitado.component.ts","./src/app/components/top-bar/top-bar.component.ts","./src/app/components/top-bar/top-bar.component.html","./src/app/components/home/sidenav-home/sidenav-home.component.ts","./src/app/components/home/sidenav-home/sidenav-home.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/grid-list.js"],"names":[],"mappings":"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AI,wDAAiB;AACrB,CAAC;AACD;AACA;AACA,0BAA0B,4DAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oEAAO;AAC5B,QAAQ,kEAAK,oBAAoB,kEAAK,EAAE,4BAA4B;AACpE,QAAQ,kEAAK,aAAa,kEAAK,EAAE,8BAA8B;AAC/D,QAAQ,uEAAU,8CAA8C,oEAAO;AACvE;AACA;AACA,mBAAmB,oEAAO;AAC1B,QAAQ,kEAAK,oBAAoB,kEAAK,EAAE,sCAAsC;AAC9E,QAAQ,kEAAK,aAAa,kEAAK,EAAE,qCAAqC;AACtE,QAAQ,uEAAU,8CAA8C,oEAAO;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,CAAC,yDAAkB,GAAG;AACxK,gCAAgC,+DAAwB,EAAE,+FAA+F;AACzJ;AACA,KAAK,OAAO,yDAAW;AACvB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,yDAAkB,EAAE,EAAE,EAAE,QAAQ,EAAE;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4DAAc;AAC9D;AACA;AACA;AACA;AACA;AACA,gCAAgC,uEAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA,iCAAiC,0DAAY;AAC7C;AACA,iCAAiC,6CAAO;AACxC;AACA,uDAAuD,WAAW;AAClE;AACA,sCAAsC,6CAAO;AAC7C;AACA;AACA;AACA;AACA,qCAAqC,2EAAoB;AACzD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AA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AkB,gBAAgB,2BAA2B,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS,0EAA0E,aAAa,mBAAmB,YAAY,WAAW,2BAA2B,gBAAgB,eAAe,kBAAkB,OAAO,QAAQ,8EAA8E,SAAS,UAAU,mBAAmB,kBAAkB,gGAAgG,YAAY,mCAAmC,aAAa,sBAAsB,UAAU,sBAAsB,gBAAgB,qCAAqC,SAAS,UAAU,mBAAmB,kBAAkB,yCAAyC,aAAa,qCAAqC,MAAM,qCAAqC,SAAS,gCAAgC,mBAAmB,0CAA0C,gBAAgB,kBAAkB,sCAAsC,aAAa;AAC9vC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,SAAS;AACrE,mCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC,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AwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA,uBAAuB;AACvB,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY,OAAO,iBAAiB,KAAK,eAAe;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS,KAAK,iBAAiB,MAAM,OAAO;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS,KAAK,KAAK,OAAO,SAAS,KAAK,iBAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB,MAAM,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,KAAK,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,aAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,sCAAsC,KAAK,qBAAqB;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,sCAAsC,KAAK,qBAAqB;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+EAA+E,MAAM;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,IAAI;AACvB;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mBAAmB;AACnC;AACA,4CAA4C,kFAAoB;AAChE;AACA;AACA,sBAAsB,qBAAqB;AAC3C,2BAA2B,mBAAmB,2BAA2B,EAAE;AAC3E;AACA,qBAAqB,wBAAwB;AAC7C;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,gEAAqB,MAAM;AACpL,mBAAmB,+DAAwB,EAAE,4HAA4H;AACzK,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,0GAA0G;AACjH,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,iEAAiE,wCAAwC,gEAAyB;AACpJ;AACA;AACA,aAAa,mGAAmG;AAChH,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,uDAAuD;AAC9D;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE;AAC3D;AACA;AACA,cAAc,OAAO,6DAAe,uBAAuB,oBAAoB,IAAI;AACnF,YAAY,OAAO,mDAAK,EAAE;AAC1B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,yCAAyC,cAAc,kBAAkB,eAAe,cAAc,kBAAkB,gBAAgB,2BAA2B,MAAM,OAAO,QAAQ,SAAS,kBAAkB,aAAa,mBAAmB,uBAAuB,YAAY,UAAU,SAAS,0EAA0E,aAAa,mBAAmB,YAAY,WAAW,2BAA2B,gBAAgB,eAAe,kBAAkB,OAAO,QAAQ,8EAA8E,SAAS,UAAU,mBAAmB,kBAAkB,gGAAgG,YAAY,mCAAmC,aAAa,sBAAsB,UAAU,sBAAsB,gBAAgB,qCAAqC,SAAS,UAAU,mBAAmB,kBAAkB,yCAAyC,aAAa,qCAAqC,MAAM,qCAAqC,SAAS,gCAAgC,mBAAmB,0CAA0C,gBAAgB,kBAAkB,sCAAsC,aAAa;AAC3wC,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,gEAAqB;AACxF,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,6DAAe;AACjC,iCAAiC,oBAAoB;AACrD,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,uCAAuC;AACvG,yBAAyB,8DAAuB,EAAE,0BAA0B;AAC5E,yBAAyB,8DAAuB,EAAE,YAAY,oEAAa,EAAE,sEAAe,GAAG,oEAAa;AAC5G,QAAQ,sEAAe,GAAG;AAC1B,cAAc,oDAAoD,gEAAyB,qBAAqB,4BAA4B,6IAA6I,EAAE,wBAAwB,SAAS,oEAAa,EAAE,sEAAe,EAAE,EAAE,wBAAwB,oDAAoD,oEAAa;AACvb,QAAQ,sEAAe,2FAA2F,EAAE,EAAE,EAAE,EAAE;AAC1H,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA,0BAA0B,oEAAa,EAAE,sEAAe;AACxD;AACA;AACA;AACA;AACA,oBAAoB,oEAAa;AACjC,oBAAoB,sEAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE0P;;AAE1P,qC","file":"components-home-home-module-es2015.js","sourcesContent":["import { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ModalDocumentComponent } from './../../../modals/modal-document/modal-document.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from './../../../../service/api.service';\r\nimport { Component, OnInit, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-document-item',\r\n  templateUrl: './document-item.component.html',\r\n  styleUrls: ['./document-item.component.css']\r\n})\r\nexport class DocumentItemComponent implements OnInit, AfterViewInit {\r\n\r\n  @Input() id: number = -1;\r\n  @Input() src_document: string = './../../../../../ctc.png';\r\n  @Input() date: string = '';\r\n  @Input() title: string = '';\r\n  @Input() description: string = '';\r\n  @Input() estado: boolean = false;\r\n  @Output() emisor: EventEmitter<boolean> = new EventEmitter();\r\n  estado_text: string = 'public';\r\n  loading: boolean = false;\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.estado) this.estado_text = 'private';\r\n    this.api.getDocumentsFoto(this.id).subscribe((result) => {\r\n      this.src_document = result + '';\r\n    }, (error) => {\r\n      this.src_document = error.url;\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => { this.finishLoading() }, 1500);\r\n  }\r\n\r\n  deleteDocument() {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"Documento\";\r\n    modal.componentInstance.id = this.id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.emisor.emit(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateDocument() {\r\n    const modal = this.modalService.open(ModalDocumentComponent, { size: 'sm' });\r\n    let form_document = new FormGroup({\r\n      id: new FormControl(this.id),\r\n      title: new FormControl(this.title),\r\n      descripcion: new FormControl(this.description),\r\n      imagen: new FormControl(this.title + '.jpg'),\r\n      date: new FormControl(this.date),\r\n    });\r\n    modal.componentInstance.modalHeader = \"documentos\";\r\n    modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n    modal.componentInstance.modal_action = \"Editar\";\r\n    modal.componentInstance.form_document = form_document;\r\n    modal.componentInstance.src_document = this.src_document;\r\n    modal.componentInstance.estado = this.estado;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.emisor.emit(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  finishLoading() {\r\n    this.loading = true;\r\n  }\r\n}\r\n","<mat-card class=\"bg-darkest item-document\" style=\"width: 400px;height: 300px;max-width: 270px;\">\r\n    <mat-card-header>\r\n        <mat-icon id=\"icon\" matTooltip=\"{{estado_text}}\" name=\"icon\" class=\"text-danger\" *ngIf=\"estado\" mat-card-avatar>\r\n            bookmark</mat-icon>\r\n        <mat-icon id=\"icon\" matTooltip=\"{{estado_text}}\" name=\"icon\" class=\"text-success\" *ngIf=\"!estado\" mat-card-avatar>\r\n            bookmark</mat-icon>\r\n        <mat-card-title style=\"font-size: medium;color: #f44336;\">{{title}}</mat-card-title>\r\n        <mat-card-subtitle style=\"font-size: xx-small; color: white;\">{{date}}</mat-card-subtitle>\r\n        <button mat-icon-button style=\"position: absolute;right: 5px;top: 5px;\" [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>more_vert</mat-icon>\r\n    </button>\r\n        <mat-menu #menu=\"matMenu\" class=\"bg-dark\">\r\n            <button mat-menu-item (click)=\"updateDocument()\" style=\"color: white;\">actualizar</button>\r\n            <button mat-menu-item (click)=\"deleteDocument()\" style=\"color: white;\">eliminar</button>\r\n        </mat-menu>\r\n    </mat-card-header>\r\n    <div class=\"text-center\">\r\n        <img class=\"img-thumbnail\" style=\"height: 150px;width: 100%;\" [src]=\"src_document\">\r\n    </div>\r\n    <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\" matTooltip=\"{{description}}\">\r\n        {{description}}\r\n    </mat-card-content>\r\n    <mat-card-actions align=\"start\">\r\n        <!-- <button mat-button >Action1</button> -->\r\n    </mat-card-actions>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-secretos',\n  templateUrl: './documentos-secretos.component.html',\n  styleUrls: ['./documentos-secretos.component.css']\n})\nexport class DocumentosSecretosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-secretos works!</p>\n","<mat-accordion *ngFor=\"let item of menu\" multi>\r\n    <mat-expansion-panel class=\"mat-elevation-z0 borde-left-warn\" hideToggle (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\" [hidden]=\"!item.permit\">\r\n        <mat-expansion-panel-header (click)=\"navigateTo(item.path)\">\r\n            <mat-panel-title class=\"menu-item\" routerLinkActive=\"mat-icon-active\">\r\n                <mat-icon class=\"font-title-menu\" mat-list-icon>{{item.icon}}</mat-icon>\r\n                <span class=\"font-title-menu\" style=\"margin-left: 10px;\">{{item.name}}</span>\r\n            </mat-panel-title>\r\n            <mat-panel-description>\r\n                <mat-icon *ngIf=\"item.arrow\" class=\"font-title-menu\">keyboard_arrow_down</mat-icon>\r\n            </mat-panel-description>\r\n        </mat-expansion-panel-header>\r\n        <mat-nav-list style=\"margin-top: -15px;margin-bottom: -30px;\" class=\"borde-left-warn\">\r\n            <div>\r\n                <ng-container *ngFor=\"let hijo of item.children\">\r\n                    <ng-container>\r\n                        <mat-list-item routerLinkActive=\"mat-icon-active\" style=\"margin-left: -25px;font-size: 14px;margin-top: -15px\">\r\n                            <div class=\"container\">\r\n                                <div class=\"row\">\r\n                                    <div style=\"background-color: #ff5722;width: 2px;\" *ngIf=\"active == hijo.path\"></div>\r\n                                    <mat-subheader class=\"menu-item\" mat-list-item (click)=\"navigateTo(hijo.path)\" mat-line>\r\n                                        <mat-icon mat-list-icon style=\"margin-left: 10px;font-size: 15px;\">{{hijo.icon}}</mat-icon>\r\n                                        <span style=\"margin-left: 3px;\">{{hijo.name}}</span>\r\n                                    </mat-subheader>\r\n                                </div>\r\n                            </div>\r\n                        </mat-list-item>\r\n                    </ng-container>\r\n                </ng-container>\r\n            </div>\r\n        </mat-nav-list>\r\n\r\n        <!-- <div *ngFor=\"let hijo of item.children\" class=\"menu-subitem\">\r\n      <mat-subheader (click)=\"navigateTo(hijo.path)\"><mat-icon>{{hijo.icon}}</mat-icon>{{hijo.name}}</mat-subheader>\r\n    </div> -->\r\n    </mat-expansion-panel>\r\n</mat-accordion>","import { ApiService } from './../../../service/api.service';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\nimport { Router } from '@angular/router';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  panelOpenState = true;\r\n  menu: any[] = []\r\n  active: string = '';\r\n\r\n  constructor(private router: Router, private storage: SessionStorageService, private api: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    try {\r\n      const user = this.storage.retrieve('usuario');\r\n      this.menu = [\r\n        {\r\n          name: 'Perfil',\r\n          icon: 'contact_mail',\r\n          arrow: true,\r\n          permit: true,\r\n          children: [\r\n            { name: 'Perfil', icon: 'contact_mail', path: 'perfil' },\r\n          ]\r\n        },\r\n        {\r\n          name: 'Administracion',\r\n          icon: 'supervisor_account',\r\n          arrow: true,\r\n          permit: user.is_all == 1,\r\n          children: [\r\n            { name: 'usuarios', icon: 'person', path: 'users', permit: user.is_all == 1, },\r\n            { name: 'roles', icon: 'account_box', path: 'roles', permit: user.is_all == 1, },\r\n            { name: 'permisos', icon: 'perm_identity', path: 'roles-permisos', permit: user.is_all == 1, },\r\n            { name: 'historial', icon: 'event_note', path: 'historial', permit: user.is_all == 1, },\r\n          ]\r\n        },\r\n        {\r\n          name: 'Documentos',\r\n          icon: 'books',\r\n          arrow: true,\r\n          permit: user.is_read == 1,\r\n          children: [\r\n            { name: 'limitados', icon: 'article', path: 'documentos-limitados', permit: user.is_read == 1, },\r\n            { name: 'secretos', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n            { name: 'ordinarios personales', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n            { name: 'clasificados', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n            { name: 'ordinarios', icon: 'article', path: 'documentos', permit: user.is_read == 1, },\r\n          ]\r\n        },\r\n        // {\r\n        //   name: 'Configuracion',\r\n        //   icon: 'settings',\r\n        //   arrow: true,\r\n        //   permit: true,\r\n        //   children: [\r\n        //     { name: 'preferencias', icon: 'build', path: 'menu', permit: true, },\r\n        //     { name: 'conexxion', icon: 'network_cell', path: 'top', permit: true, }\r\n        //   ]\r\n        // },\r\n        {\r\n          name: 'Logout',\r\n          icon: 'exit_to_app',\r\n          path: 'logout',\r\n          permit: true,\r\n        }\r\n      ]\r\n    } catch (e) {\r\n      console.log('Error', e);\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  /**click sobre uno de los children */\r\n  navigateTo(path) {\r\n    console.log('click', path);\r\n    if(path != undefined)  this.active = path;\r\n    if (path) {\r\n      const user_id = this.storage.retrieve('usuario').id;\r\n      if (path == 'logout') {\r\n        const user_id = this.storage.retrieve('usuario').id;\r\n        this.storage.clear();\r\n        this.router.navigate(['']);\r\n        this.api.LogoutUser(user_id).subscribe((result) => {\r\n          console.log('Logout: ', result);\r\n        })\r\n      } else {\r\n        this.api.saveAccion(user_id, 'Entro a la sesion ' + path).subscribe((result) => {\r\n          this.router.navigate(['home/' + path]);\r\n        }, (err) => {\r\n          console.log(err);\r\n          this.router.navigate(['home/' + path]);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-clasificados',\n  templateUrl: './documentos-clasificados.component.html',\n  styleUrls: ['./documentos-clasificados.component.css']\n})\nexport class DocumentosClasificadosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-clasificados works!</p>\n","import { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ApiService } from './../../../service/api.service';\nimport { SessionStorageService } from 'ngx-webstorage';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { UserHistory } from 'src/app/models/userhistory';\n\n\n@Component({\n  selector: 'app-perfil-usuario',\n  templateUrl: './perfil-usuario.component.html',\n  styleUrls: ['./perfil-usuario.component.css']\n})\n\nexport class PerfilUsuarioComponent implements OnInit {\n\n  constructor(private storage: SessionStorageService, private api: ApiService) { }\n\n  displayedColumns: string[] = ['id', 'user', 'accion', 'fecha'];\n  dataSource: MatTableDataSource<UserHistory>;\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  message_server: string = '';\n  user: string = '';\n  rol: string = 'Historial de acciones';\n  src_avatar : any;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  permisos: any[] = [];\n  urlImage = 'ctc.png';\n  usuario: string = '';\n  nombre: string = '';\n  register_date: string = '';\n  register_hour: string = '';\n  rol_name: string = '';\n\n  ngOnInit() {\n    const user = this.storage.retrieve('usuario');\n    console.log(user );\n    this.api.getAvatarUser(user.id).subscribe((result)=>{\n      this.urlImage = result.toString();\n    },(error)=>{\n      this.urlImage = error.url;\n    });\n    this.usuario = user.user;\n    this.nombre = user.full_name;\n    this.register_date = user.register_date;\n    this.register_hour = user.register_hour;\n    this.rol_name = user.rol_name;\n    this.permisos.push({ icon: 'done_all', name: 'permiso de todo', granted: user.is_all == 1})\n    this.permisos.push({ icon: 'library_books', name: 'permiso de lectura', granted: user.is_read == 1})\n    this.permisos.push({ icon: 'edit', name: 'permiso de escritura', granted: user.is_edit == 1})\n    this.permisos.push({ icon: 'delete_sweep', name: 'permiso de eliminacion', granted: user.is_delete == 1})\n    this.permisos.push({ icon: 'create_new_folder', name: 'permiso de creacion', granted: user.is_create == 1})\n\n    this.api.getUserHistory(user.id).subscribe((result) => {\n      if (result.length > 0) {\n        this.dataSource = new MatTableDataSource(result);\n        this.resultsLength = result.length;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.isLoadingResults = false;\n      }\n      else {\n        this.dataSource = new MatTableDataSource([]);\n        this.resultsLength = 0;\n        this.isRateLimitReached = true;\n        this.isLoadingResults = false;\n        this.message_server = 'El usuario no ha ingresado nunca a la pagina';\n      }\n    }, (error) => {\n      this.message_server = error.error.message;\n      this.isLoadingResults = false;\n      this.isRateLimitReached = true;\n      this.resultsLength = 0;\n    });\n  }\n\n\n}\n","<div class=\"full-container bg-dark\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-grid-list cols=\"4\" rowHeight=\"100px\">\n                <mat-grid-tile [colspan]=\"2\" [rowspan]=\"3\" class=\"bg-dark\">\n                    <mat-card class=\"bg-darkest cont\" style=\"width: 100%;margin-inline: 10px;\">\n                        <mat-card-header>\n                            <mat-card-title style=\"font-size: medium;color: #f44336;\">Datos del usuario</mat-card-title>\n                            <mat-card-subtitle style=\"font-size: xx-small; color: white;\">usuario actual</mat-card-subtitle>\n                        </mat-card-header>\n                        <div class=\"row\">\n                            <div class=\"col-md-5\">\n                                <img class=\"img-thumbnail rounded-circle\" [src]=\"urlImage\" style=\"height: 150px;width: 150px;box-shadow: 2px 2px 2px 2px rgba(0, 0, 0.2, 0);\">\n                            </div>\n                            <div class=\"col-md-7\" style=\"display: flex;flex-direction: column; vertical-align: middle;\">\n                                <div>\n                                    <mat-icon color=\"warn\">person</mat-icon> Usuario: {{usuario}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">text_fields</mat-icon> Nombre: {{nombre}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">date_range</mat-icon> Fecha de registro: {{register_date}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">hourglass_empty</mat-icon> Hora de registro: {{register_hour}}</div>\n                                <div>\n                                    <mat-icon color=\"warn\">verified_user</mat-icon> Rol: {{rol_name}}</div>\n                            </div>\n                        </div>\n                        <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n\n                        </mat-card-content>\n                        <mat-card-actions align=\"start\">\n                            <!-- <button mat-button >Action1</button> -->\n                        </mat-card-actions>\n                    </mat-card>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"2\" [rowspan]=\"3\" class=\"bg-dark\">\n                    <mat-card class=\"bg-darkest cont\" style=\"width: 100%;margin-inline: 10px;\">\n                        <mat-card-header>\n                            <mat-card-title style=\"font-size: medium;color: #f44336;\">Permisos del usuario</mat-card-title>\n                            <mat-card-subtitle style=\"font-size: xx-small; color: white;\">usuario actual</mat-card-subtitle>\n                        </mat-card-header>\n                        <div>\n                            <mat-selection-list #shoes [multiple]=\"false\" style=\"overflow-y: auto; height: 150px;\">\n                                <mat-list-option *ngFor=\"let permiso of permisos\" style=\"font-size: small;scrollbar-width: none;height: 25px;\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-2\">\n                                            <mat-icon color=\"warn\" class=\"mat-18\">{{permiso.icon}}</mat-icon>\n                                        </div>\n                                        <div class=\"col-md-8\" style=\"color: white;\">\n                                            <label>{{permiso.name}}</label>\n                                        </div>\n                                        <div class=\"col-md-2\">\n                                            <mat-icon class=\"mat-18 text-success\" *ngIf=\"permiso.granted\">check</mat-icon>\n                                            <mat-icon class=\"mat-18 text-danger\" *ngIf=\"!permiso.granted\">close</mat-icon>\n                                        </div>\n                                    </div>\n                                </mat-list-option>\n                            </mat-selection-list>\n                        </div>\n                        <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n\n                        </mat-card-content>\n                        <mat-card-actions align=\"start\">\n                            <!-- <button mat-button >Action1</button> -->\n                        </mat-card-actions>\n                    </mat-card>\n                </mat-grid-tile>\n                <mat-grid-tile [colspan]=\"4\" [rowspan]=\"3\" class=\"bg-dark\">\n                    <mat-card class=\"bg-darkest cont\" style=\"width: 100%;margin-inline: 10px;\">\n                        <mat-card-header>\n                            <mat-card-title style=\"font-size: medium;color: #f44336;\">Historial del usuario</mat-card-title>\n                            <mat-card-subtitle style=\"font-size: xx-small; color: white;\">usuario actual</mat-card-subtitle>\n                        </mat-card-header>\n                        <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n                            <div class=\"full-containers\">\n                                <div class=\"example-container mat-elevation-z0 bg-dark\">\n                                    <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n                                        <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n                                        <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                                            {{message_server}}\n                                        </div>\n                                    </div>\n                                    <div class=\"example-container\">\n                                        <div class=\"example-table-container\">\n                                            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                                                <!-- id Column -->\n                                                <ng-container matColumnDef=\"id\">\n                                                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                                                </ng-container>\n\n                                                <!-- user column -->\n                                                <ng-container matColumnDef=\"user\">\n                                                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                                                        {{row.usuario}}</td>\n                                                </ng-container>\n\n                                                <!--accion column -->\n                                                <ng-container matColumnDef=\"accion\">\n                                                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"accion\" *matHeaderCellDef>Accion</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                                                        {{row.accion}}</td>\n                                                </ng-container>\n\n                                                <!-- fecha Column -->\n                                                <ng-container matColumnDef=\"fecha\">\n                                                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Fecha</th>\n                                                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                                                        {{row.fecha}}</td>\n                                                </ng-container>\n\n                                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                            </table>\n                                        </div>\n\n                                        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"7\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n                                        </mat-paginator>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </mat-card-content>\n                        <mat-card-actions align=\"start\">\n                            <!-- <button mat-button >Action1</button> -->\n                        </mat-card-actions>\n                    </mat-card>\n                </mat-grid-tile>\n            </mat-grid-list>\n        </div>\n    </div>\n</div>","import { ModalPermisosComponent } from './../../../modals/modal-permisos/modal-permisos.component';\r\nimport { RolesPermisos } from '../../../../models/roles-permisos';\r\nimport { ModalUsuarioComponent } from '../../../modals/modal-usuario/modal-usuario.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Usuarios } from '../../../../models/usuarios';\r\nimport { ApiService } from '../../../../service/api.service';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-table-roles-permisos',\r\n  templateUrl: './table-roles-permisos.component.html',\r\n  styleUrls: ['./table-roles-permisos.component.css']\r\n})\r\n\r\nexport class TableRolesPermisosComponent implements AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'user', 'rol_name', 'is_all', 'is_edit', 'is_create', 'is_read', 'is_delete'];\r\n\r\n  toppings = new FormControl();\r\n\r\n  toppingList: string[] = ['usuario', 'nombre de rol'];\r\n  dataSource: MatTableDataSource<RolesPermisos>;\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  pageEvent: PageEvent;\r\n\r\n  filter: string = '';\r\n  filtro_usuario: string = '';\r\n  filtro_rol_name: string = '';\r\n\r\n\r\n  filtro_usuario_view: boolean = false;\r\n  filtro_rol_name_view: boolean = false;\r\n\r\n  // Top Bar\r\n  top_bar_title: string = \"Permisos\";\r\n  top_bar_subtitle: string = \"Permisos para cada rol\";\r\n  top_bar_icon: string = \"perm_identity\";\r\n\r\n  sortedData: RolesPermisos[];\r\n  array_permisos: RolesPermisos[];\r\n\r\n  filtros_row: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  message_server: string = '';\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.api.ObtenerRolesPermisos(this.filtro_usuario, this.filtro_rol_name).subscribe((result) => {\r\n      if (result.length > 0) {\r\n        this.isLoadingResults = false;\r\n        this.array_permisos = result;\r\n        this.isRateLimitReached = false;\r\n        this.dataSource = new MatTableDataSource(result);\r\n        this.resultsLength = result.length;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      } else {\r\n        this.array_permisos = [];\r\n        this.dataSource = new MatTableDataSource([]);\r\n        this.resultsLength = 0;\r\n        this.isRateLimitReached = true;\r\n        this.isLoadingResults = false;\r\n        this.message_server = \"no hay usuarios con permisos registrados\";\r\n      }\r\n    },\r\n      (error) => {\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = error.error.message;\r\n        // console.log(error)\r\n      });\r\n  }\r\n\r\n  resetPaging(): void {\r\n    this.paginator.pageIndex = 0;\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  actualizarPermisos(row: RolesPermisos) {\r\n    var modal = this.modalService.open(ModalUsuarioComponent);\r\n    modal.componentInstance.modalHeader = \"Permisos\";\r\n    modal.componentInstance.modalmessage = \"Debe al menos modificar uno de los campos\";\r\n    modal.componentInstance.modal_action = \"Editar\";\r\n    modal.componentInstance.rol_permiso.id = row.id;\r\n    modal.componentInstance.rol_permiso.user = row.user;\r\n    modal.componentInstance.rol_permiso.rol_name = row.rol_name;\r\n    modal.componentInstance.rol_permiso.is_all = row.is_all;\r\n    modal.componentInstance.rol_permiso.is_edit = row.is_edit;\r\n    modal.componentInstance.rol_permiso.is_create = row.is_create;\r\n    modal.componentInstance.rol_permiso.is_delete = row.is_delete;\r\n    modal.componentInstance.rol_permiso.is_read = row.is_read;\r\n\r\n\r\n    // Emitir desde el modal contenido de este al cerrarlo\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  eliminarRolPemisos(id: number) {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"RolPermisos\";\r\n    modal.componentInstance.id = id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  filtrarTodo() {\r\n    this.dataSource.filter = this.filter.trim().toLowerCase();\r\n  }\r\n\r\n  // filtrarByUser() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.user.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_usuario.toLocaleLowerCase().trim();\r\n  // }\r\n\r\n  onChangeSelectFilter() {\r\n    this.filtros_row = this.toppings.value.indexOf('usuario') != -1 || this.toppings.value.indexOf('nombre de rol') != -1;\r\n    this.filtro_usuario_view = this.toppings.value.indexOf('usuario') != -1;\r\n    this.filtro_rol_name_view = this.toppings.value.indexOf('nombre de rol') != -1;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.array_permisos.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'id': return compare(a.id, b.id, isAsc);\r\n        case 'user': return compare(a.user, b.user, isAsc);\r\n        case 'rol_name': return compare(a.rol_name, b.rol_name, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  isSearch(): boolean {\r\n    return this.filtro_usuario != '' || this.filtro_rol_name != '';\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n","<div class=\"full-container bg-dark\">\n\n    <app-top-bar [modal_header]=\"top_bar_title\" [modal_icon]=\"top_bar_icon\" [withAddButton]=\"false\" [modal_subheader]=\"top_bar_subtitle\" (emisor)=\"registerOrUpdate($event)\"></app-top-bar>\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                {{message_server}}\n            </div>\n        </div>\n\n        <div class=\"row bg-darkest filtros\" style=\"padding-left: 10px;margin-top: 10px;margin-inline: 0px;\">\n            <div class=\"encabezados-filtros\">\n                <mat-label style=\"margin-left: 10px;\" class=\"font-bold\">Filtro: </mat-label>\n                <mat-form-field appearance=\"outline\" class=\"mat-form-field-busqueda\" color=\"warn\">\n                    <mat-label>Escriba el criterio de busqueda</mat-label>\n                    <input matInput #filterall maxlength=\"20\" placeholder=\"nombre completo....\" [(ngModel)]=\"filter\" (ngModelChange)=\"filtrarTodo()\" name=\"filtrotodo\">\n                    <mat-icon matSuffix>search</mat-icon>\n                    <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                    <!-- <mat-hint>Hint</mat-hint> -->\n                </mat-form-field>\n            </div>\n            <mat-form-field appearance=\"outline\" style=\"margin-top: 20px;\">\n                <mat-label style=\"color: white;\">busquedas avanzadas</mat-label>\n                <mat-select [formControl]=\"toppings\" (selectionChange)=\"onChangeSelectFilter()\" multiple>\n                    <mat-select-trigger style=\"color: white;font-size: 11px;\">\n                        {{toppings.value ? toppings.value[0] : ''}}\n                        <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n          (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n        </span>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n\n        <mat-divider></mat-divider>\n        <div class=\"row bg-darkest filtros\" [ngClass]=\"{ 'row-visibility-none':!filtros_row }\" style=\"padding-left: 10px;padding-top: 20px;margin-inline: 0px;\">\n            <mat-form-field *ngIf=\"filtro_usuario_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Usuario</mat-label>\n                <input matInput #user_filter maxlength=\"20\" placeholder=\"usuario\" [(ngModel)]=\"filtro_usuario\" name=\"filtro_usuario\">\n                <mat-icon matSuffix>people</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"filtro_rol_name_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Nombre del rol</mat-label>\n                <input matInput #rol_name_filter maxlength=\"20\" placeholder=\"nombre del rol\" [(ngModel)]=\"filtro_rol_name\" name=\"filtro_rol_name\">\n                <mat-icon matSuffix>account_box</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <button [disabled]=\"!isSearch()\" style=\"height: 40px;margin-top: 10px;\" mat-raised-button color=\"warn\" flex (click)=\"loadData()\"> <mat-icon class=\"mat-18\" >search</mat-icon>Buscar\n          </button>\n\n\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"example-table-container\">\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                <!-- id Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                </ng-container>\n\n                <!-- user Column -->\n                <ng-container matColumnDef=\"user\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.user}}</td>\n                </ng-container>\n\n                <!-- rol_name Column -->\n                <ng-container matColumnDef=\"rol_name\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"rol_name\" *matHeaderCellDef>Nombre del rol</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.rol_name}}</td>\n                </ng-container>\n\n                <!-- is_all Column -->\n                <ng-container matColumnDef=\"is_all\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_all\" *matHeaderCellDef>Permiso de todo</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_all}}</td>\n                </ng-container>\n\n                <!-- is_edit Column -->\n                <ng-container matColumnDef=\"is_edit\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_edit\" *matHeaderCellDef>Permiso editar</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_edit}}</td>\n                </ng-container>\n\n                <!-- is_delete Column -->\n                <ng-container matColumnDef=\"is_delete\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_delete\" *matHeaderCellDef>Permiso borrar</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_delete}}</td>\n                </ng-container>\n\n                <!-- is_create Column -->\n                <ng-container matColumnDef=\"is_create\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_create\" *matHeaderCellDef>Permiso agregar</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_create}}</td>\n                </ng-container>\n\n                <!-- is_read Column -->\n                <ng-container matColumnDef=\"is_read\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"is_read\" *matHeaderCellDef>Permiso leer</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.is_read}}</td>\n                </ng-container>\n\n                <!-- action Column -->\n                <ng-container matColumnDef=\"actions\">\n                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                        <button type=\"button\" class=\"btn btn-outline-warning\" (click)=\"actualizarPermisos(row)\">\n            <mat-icon>edit</mat-icon>\n          </button>\n                        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"eliminarRolPemisos(row.id)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n                    </td>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </div>\n\n        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"5\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n        </mat-paginator>\n    </div>\n</div>\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true])::before,.cdk-high-contrast-active .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true])::before{top:0;left:0;right:0;bottom:0;position:absolute;box-sizing:border-box;pointer-events:none;border:3px solid;border-radius:4px;content:\\\"\\\"}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._ownHeaders.destroy();\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵfac = function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); };\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n//# sourceMappingURL=expansion.js.map","import { PerfilUsuarioComponent } from './perfil-usuario/perfil-usuario.component';\r\nimport { HistoryUserComponent } from './history-user/history-user.component';\r\nimport { TableRolesComponent } from './tables/table-roles/table-roles.component';\r\nimport { TableRolesPermisosComponent } from './tables/table-roles-permisos/table-roles-permisos.component';\r\nimport { TableUserComponent } from './tables/table-users/table-users.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxLoadingModule } from 'ngx-loading';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HomeRoutingModule } from './home-routing.module';\r\nimport { HomeComponent } from './home.component';\r\nimport { SidenavHomeComponent } from './sidenav-home/sidenav-home.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { TopBarComponent } from './../top-bar/top-bar.component';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { DocumentListComponent } from './document-list/document-list.component';\r\nimport { DocumentItemComponent } from './document-list/document-item/document-item.component';\r\nimport { DocumentoLimitadoComponent } from './documentos/documento-limitado/documento-limitado.component';\r\nimport { DocumentosSecretosComponent } from './documentos/documentos-secretos/documentos-secretos.component';\r\nimport { DocumentosOrdinaPersonalesComponent } from './documentos/documentos-ordina-personales/documentos-ordina-personales.component';\r\nimport { DocumentosClasificadosComponent } from './documentos/documentos-clasificados/documentos-clasificados.component';\r\nimport { DocumentosOrdinariosComponent } from './documentos/documentos-ordinarios/documentos-ordinarios.component';\r\nimport { DocumentoLimitadoItemComponent } from './documentos/documento-limitado/documento-limitado-item/documento-limitado-item.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    SidenavHomeComponent,\r\n    MenuComponent,\r\n    TopBarComponent,\r\n    TableUserComponent,\r\n    TableRolesComponent,\r\n    TableRolesPermisosComponent,\r\n    DocumentListComponent,\r\n    DocumentItemComponent,\r\n    HistoryUserComponent,\r\n    PerfilUsuarioComponent,\r\n    DocumentoLimitadoComponent,\r\n    DocumentosSecretosComponent,\r\n    DocumentosOrdinaPersonalesComponent,\r\n    DocumentosClasificadosComponent,\r\n    DocumentosOrdinariosComponent,\r\n    DocumentoLimitadoItemComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HomeRoutingModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    DragDropModule,\r\n    MatTreeModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatTooltipModule,\r\n    MatProgressSpinnerModule,\r\n    NgxLoadingModule.forRoot({}),\r\n    MatMenuModule,\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n","import { Router } from '@angular/router';\nimport { LocalStorageService } from 'ngx-webstorage';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private storage: LocalStorageService, private router: Router) {\n    try {\n      const user = this.storage.retrieve('usuario');\n    } catch (e) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<app-sidenav-home></app-sidenav-home>\n","import { formatDate } from '@angular/common';\r\nimport { ModalUsuarioComponent } from './../../../modals/modal-usuario/modal-usuario.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Usuarios } from './../../../../models/usuarios';\r\nimport { ApiService } from './../../../../service/api.service';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormControl } from '@angular/forms';\r\nimport { error } from 'protractor';\r\nimport { ToastService } from 'ng-uikit-pro-standard';\r\n\r\n/**\r\n * @title Table retrieving data through HTTP\r\n */\r\n@Component({\r\n  selector: 'table-http-example',\r\n  styleUrls: ['table-users.component.css'],\r\n  templateUrl: 'table-users.component.html'\r\n})\r\n\r\nexport class TableUserComponent implements AfterViewInit {\r\n  displayedColumns: string[] = ['id', 'user', 'full_name', 'register_date', 'register_hour', 'actions'];\r\n\r\n  toppings = new FormControl();\r\n\r\n  toppingList: string[] = ['usuario', 'nombre', 'fecha de registro', 'hora de registro'];\r\n  dataSource: MatTableDataSource<Usuarios>;\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  pageEvent: PageEvent;\r\n\r\n  filter: string = '';\r\n  filtro_usuario: string = '';\r\n  filtro_nombre: string = '';\r\n  filtro_fecha: Date;\r\n  filtro_hora: string = '';\r\n\r\n  filtro_usuario_view: boolean = false;\r\n  filtro_nombre_view: boolean = false;\r\n  filtro_fecha_view: boolean = false;\r\n  filtro_hora_view: boolean = false;\r\n\r\n  // Top Bar\r\n  top_bar_title: string = \"Usuario\";\r\n  top_bar_subtitle: string = \"usuarios registrados en la pagina\";\r\n  top_bar_icon: string = \"people\";\r\n\r\n  sortedData: Usuarios[];\r\n  array_user: Usuarios[];\r\n\r\n  filtros_row: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  message_server: string = '';\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    var usuario_filtro: Usuarios = { 'id': 1, 'user': this.filtro_usuario, 'password': this.filter, 'full_name': this.filtro_nombre, 'register_date': '', 'register_hour': this.filtro_hora, 'avatar': null }\r\n    this.api.ObtenerUsuarios(usuario_filtro).subscribe((result) => {\r\n      this.isLoadingResults = false;\r\n      this.isRateLimitReached = false;\r\n\r\n      if (result.length > 0) {\r\n        this.array_user = result;\r\n        this.dataSource = new MatTableDataSource(result);\r\n        this.resultsLength = result.length;\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      }\r\n      else {\r\n        this.array_user = [];\r\n        this.dataSource = new MatTableDataSource([]);\r\n        this.resultsLength = 0;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = \"no hay usuarios registrados\";\r\n      }\r\n    },\r\n      (error) => {\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = error.error.message;\r\n        // console.log(error)\r\n      });\r\n  }\r\n\r\n  resetPaging(): void {\r\n    this.paginator.pageIndex = 0;\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  actualizarUsuario(row: Usuarios) {\r\n    this.api.ObtenerRolesByUser(row.id).subscribe((result)=>{\r\n      var modal = this.modalService.open(ModalUsuarioComponent);\r\n      modal.componentInstance.modalHeader = \"Usuario\";\r\n      modal.componentInstance.modalmessage = \"Debe al menos modificar uno de los campos\";\r\n      modal.componentInstance.modal_action = \"Editar\";\r\n      modal.componentInstance.form_user.setValue({\r\n        id: row.id,\r\n        user: row.user,\r\n        password: row.password,\r\n        full_name: row.full_name,\r\n        register_date: row.register_date,\r\n        register_hour: row.register_hour,\r\n        avatar: row.avatar,\r\n        rol_usuario: result,\r\n        confirm: row.password\r\n      });\r\n      modal.componentInstance.roles2 = result;\r\n\r\n      // Emitir desde el modal contenido de este al cerrarlo\r\n      modal.result.then((result) => {\r\n        if (result) {\r\n          this.loadData();\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  eliminarUser(id: number) {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"Usuario\";\r\n    modal.componentInstance.id = id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  filtrarTodo() {\r\n    this.dataSource.filter = this.filter.trim().toLowerCase();\r\n  }\r\n\r\n  // filtrarByUser() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.user.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_usuario.toLocaleLowerCase().trim();\r\n  // }\r\n\r\n  // filtrarByName() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.full_name.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_nombre.trim().toLocaleLowerCase();\r\n  // }\r\n\r\n  // filtrarByDate() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.register_date.indexOf(filter) != -1;\r\n  //   var fecha = formatDate(this.filtro_fecha, 'dd - MM - yyyy', 'en-US');\r\n  //   this.dataSource.filter = fecha.trim();\r\n  // }\r\n\r\n  // filtrarByHour() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.register_hour.toLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_hora.trim().toLowerCase();\r\n  // }\r\n\r\n  onChangeSelectFilter() {\r\n    this.filtros_row = this.toppings.value.indexOf('usuario') != -1 || this.toppings.value.indexOf('nombre') != -1 || this.toppings.value.indexOf('fecha de registro') != -1 || this.toppings.value.indexOf('hora de registro') != -1;\r\n    this.filtro_usuario_view = this.toppings.value.indexOf('usuario') != -1;\r\n    this.filtro_nombre_view = this.toppings.value.indexOf('nombre') != -1;\r\n    this.filtro_fecha_view = this.toppings.value.indexOf('fecha de registro') != -1;\r\n    this.filtro_hora_view = this.toppings.value.indexOf('hora de registro') != -1;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.array_user.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'id': return compare(a.id, b.id, isAsc);\r\n        case 'user': return compare(a.user, b.user, isAsc);\r\n        case 'full_name': return compare(a.full_name, b.full_name, isAsc);\r\n        case 'register_date': return compare(a.register_date, b.register_date, isAsc);\r\n        case 'register_hour': return compare(a.register_hour, b.register_hour, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  isSearch(): boolean {\r\n    return this.filtro_usuario != '' || this.filtro_nombre != '' || this.filtro_hora != '';\r\n  }\r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n","<div class=\"full-container bg-dark\">\r\n\r\n    <app-top-bar [modal_header]=\"top_bar_title\" [modal_icon]=\"top_bar_icon\" [modal_subheader]=\"top_bar_subtitle\" (emisor)=\"registerOrUpdate($event)\"></app-top-bar>\r\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\r\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\r\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\r\n                {{message_server}}\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row bg-darkest filtros\" style=\"padding-left: 10px;margin-top: 10px;margin-inline: 0px;\">\r\n            <div class=\"encabezados-filtros col-md-3\">\r\n                <mat-label style=\"margin-left: 10px;\" class=\"font-bold\">Filtro: </mat-label>\r\n                <mat-form-field appearance=\"outline\" class=\"mat-form-field-busqueda\" color=\"warn\">\r\n                    <mat-label>Escriba el criterio de busqueda</mat-label>\r\n                    <input matInput #filterall maxlength=\"20\" placeholder=\"nombre completo....\" [(ngModel)]=\"filter\" (ngModelChange)=\"filtrarTodo()\" name=\"filtrotodo\">\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                    <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                    <!-- <mat-hint>Hint</mat-hint> -->\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                <mat-form-field appearance=\"outline\" style=\"margin-top: 20px;\">\r\n                    <mat-label style=\"color: white;\">busquedas avanzadas</mat-label>\r\n                    <mat-select [formControl]=\"toppings\" (selectionChange)=\"onChangeSelectFilter()\" multiple>\r\n                        <mat-select-trigger style=\"color: white;font-size: 11px;\">\r\n                            {{toppings.value ? toppings.value[0] : ''}}\r\n                            <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\r\n            (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\r\n          </span>\r\n                        </mat-select-trigger>\r\n                        <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <mat-divider></mat-divider>\r\n        <div class=\"row bg-darkest filtros\" [ngClass]=\"{ 'row-visibility-none':!filtros_row }\" style=\"padding-left: 10px;padding-top: 20px;margin-inline: 0px;\">\r\n            <mat-form-field *ngIf=\"filtro_usuario_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Usuario</mat-label>\r\n                <input matInput #user maxlength=\"20\" placeholder=\"usuario\" [(ngModel)]=\"filtro_usuario\" name=\"filtro_usuario\">\r\n                <mat-icon matSuffix>people</mat-icon>\r\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                <!-- <mat-hint>Hint</mat-hint> -->\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"filtro_nombre_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Nombre</mat-label>\r\n                <input matInput #full_name_search maxlength=\"20\" placeholder=\"nombre\" [(ngModel)]=\"filtro_nombre\" name=\"filtro_nombre\">\r\n                <mat-icon matSuffix>text_fields</mat-icon>\r\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                <!-- <mat-hint>Hint</mat-hint> -->\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"filtro_fecha_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Fecha</mat-label>\r\n                <input matInput [matDatepicker]=\"datepicker\" [(ngModel)]=\"filtro_fecha\" name=\"filtro_fecha\">\r\n                <mat-datepicker-toggle style=\"color: white;\" matSuffix [for]=\"datepicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #datepicker>\r\n                    <mat-datepicker-actions>\r\n                        <button mat-button matDatepickerCancel>Cancel</button>\r\n                        <button mat-raised-button color=\"primary\" matDatepickerApply>Apply</button>\r\n                    </mat-datepicker-actions>\r\n                </mat-datepicker>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field *ngIf=\"filtro_hora_view\" appearance=\"outline\" color=\"warn\">\r\n                <mat-label>Hora</mat-label>\r\n                <input matInput #full_name_search maxlength=\"20\" placeholder=\"hora\" [(ngModel)]=\"filtro_hora\" (ngModelChange)=\"filtrarByHour()\" name=\"filtro_hora\">\r\n                <mat-icon matSuffix>timer</mat-icon>\r\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\r\n                <!-- <mat-hint>Hint</mat-hint> -->\r\n            </mat-form-field>\r\n            <button [disabled]=\"!isSearch()\" style=\"height: 40px;margin-top: 10px;\" mat-raised-button color=\"warn\" flex (click)=\"loadData()\"> <mat-icon class=\"mat-18\" >search</mat-icon>Buscar\r\n            </button>\r\n\r\n\r\n        </div>\r\n        <mat-divider></mat-divider>\r\n        <div class=\"example-table-container\">\r\n\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\r\n                <!-- id Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n                </ng-container>\r\n\r\n                <!-- user Column -->\r\n                <ng-container matColumnDef=\"user\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.user}}</td>\r\n                </ng-container>\r\n\r\n                <!-- full_name Column -->\r\n                <ng-container matColumnDef=\"full_name\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"full_name\" *matHeaderCellDef>Nombre completo</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.full_name}}</td>\r\n                </ng-container>\r\n\r\n                <!-- register_date Column -->\r\n                <ng-container matColumnDef=\"register_date\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"register_date\" *matHeaderCellDef>Fecha de registro</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.register_date}}</td>\r\n                </ng-container>\r\n\r\n                <!-- register_hour Column -->\r\n                <ng-container matColumnDef=\"register_hour\">\r\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"register_hour\" *matHeaderCellDef>Hora de registro</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.register_hour}}</td>\r\n                </ng-container>\r\n\r\n                <!-- action Column -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\r\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\r\n                        <button type=\"button\" matTooltip=\"actualizar\" class=\"btn btn-outline-warning\" (click)=\"actualizarUsuario(row)\">\r\n              <mat-icon>edit</mat-icon>\r\n            </button>\r\n                        <button type=\"button\" matTooltip=\"eliminar\" class=\"btn btn-outline-danger\" (click)=\"eliminarUser(row.id)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </div>\r\n\r\n        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"7\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\r\n        </mat-paginator>\r\n    </div>\r\n</div>","import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵfac = function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); };\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n//# sourceMappingURL=accordion.js.map","import { PerfilUsuarioComponent } from './perfil-usuario/perfil-usuario.component';\r\nimport { HistoryUserComponent } from './history-user/history-user.component';\r\nimport { DocumentListComponent } from './document-list/document-list.component';\r\nimport { DocumentoLimitadoComponent } from './documentos/documento-limitado/documento-limitado.component';\r\nimport { TableRolesComponent } from './tables/table-roles/table-roles.component';\r\nimport { TableRolesPermisosComponent } from './tables/table-roles-permisos/table-roles-permisos.component';\r\nimport { TableUserComponent } from './tables/table-users/table-users.component';\r\nimport { TopBarComponent } from './../top-bar/top-bar.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      { path: 'menu', component: MenuComponent },\r\n      { path: 'top', component:TopBarComponent},\r\n      { path: 'users', component:TableUserComponent},\r\n      { path: 'roles', component:TableRolesComponent},\r\n      { path: 'roles-permisos', component:TableRolesPermisosComponent },\r\n      { path: 'documentos', component:DocumentListComponent },\r\n      { path: 'documentos-limitados', component:DocumentoLimitadoComponent },\r\n      { path: 'perfil', component:PerfilUsuarioComponent },\r\n      { path: 'historial', component:HistoryUserComponent },\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","<div class=\"bg-dark full-container\">\r\n    <app-top-bar [modal_header]=\"title\" [modal_icon]=\"icon\" [modal_subheader]=\"subtitle\" (emisor)=\"registerOrUpdate($event)\">\r\n    </app-top-bar>\r\n\r\n    <div class=\"row bg-darkest filtros mat-elevation-z4\" style=\"padding: 10px;margin-top: 10px;margin-inline: 0px; height: 70px;\">\r\n        <div class=\"col-md-10\">\r\n            <section class=\"example-section\">\r\n                <label>Visibilidad</label>\r\n                <mat-radio-group style=\"display: block;\" [(ngModel)]=\"filtro_visivility\" (ngModelChange)=\"loadData()\">\r\n                    <mat-radio-button [checked]='true' style=\"margin-right: 10px;color: white;\" value=\"pyp\" color=\"warn\">publico y privado</mat-radio-button>\r\n                    <mat-radio-button style=\"margin-right: 10px;color: white;\" value=\"public\" color=\"warn\">publico</mat-radio-button>\r\n                    <mat-radio-button style=\"margin-right: 10px;color: white;\" value=\"private\" color=\"warn\">privado</mat-radio-button>\r\n                </mat-radio-group>\r\n            </section>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n            <section style=\"position: absolute; right: 0;margin-right: 15px;\">\r\n                <mat-form-field appearance=\"outline\" color=\"warn\">\r\n                    <mat-label>Filtrar por titulo</mat-label>\r\n                    <input style=\"color: white;\" matInput placeholder=\"Escriba criterio de busqueda ...\" [(ngModel)]=\"filtro\" name=\"filtro\" (ngModelChange)=\"filtroAll()\">\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n            </section>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"lista-document\" id=\"lista\">\r\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\r\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\r\n            <div class=\"example-rate-limit-reached\" style=\"color: #f44336;\" *ngIf=\"isRateLimitReached\">\r\n                {{server_message}}\r\n            </div>\r\n        </div>\r\n        <mat-grid-list *ngIf=\"!isLoadingResults\" [cols]=\"breakpoint\" rowHeight=\"1.6:2\" (window:resize)=\"onResize($event)\">\r\n            <mat-grid-tile *ngFor=\"let item of documentos\">\r\n                <app-document-item [estado]=\"item.estado\" [title]=\"item.title\" [description]=\"item.descripcion\" [date]=\"item.date\" [src_document]=\"item.imagen\" [id]=\"item.id\" (emisor)=\"onDelete($event)\">\r\n                </app-document-item>\r\n            </mat-grid-tile>\r\n        </mat-grid-list>\r\n    </div>\r\n</div>\r\n","import { ApiService } from './../../../service/api.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-document-list',\r\n  templateUrl: './document-list.component.html',\r\n  styleUrls: ['./document-list.component.css']\r\n})\r\nexport class DocumentListComponent implements OnInit {\r\n\r\n  title: string = 'Documentos Secretos';\r\n  subtitle: string = 'Vista privada no para todos los usuarios';\r\n  icon: string = 'assignment';\r\n  documentos: any[] = [];\r\n  documentos_reser: any[] = [];\r\n  breakpoint;\r\n  server_message;\r\n  isLoadingResults: boolean = true;\r\n  isRateLimitReached: boolean = false;\r\n  filtro_visivility: string = 'pyp';\r\n  filtro: string = '';\r\n\r\n  constructor(private api: ApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  onResize(event) {\r\n    const screenWidth = event.target.innerWidth;\r\n    const screenHeigth = event.target.innerHeight;\r\n    this.redimensionarListaWidth(screenWidth);\r\n    this.redimensionarListaHeigth(screenHeigth);\r\n    // this.breakpoint = (event.target.innerWidth <= 500) ? 1 : 4;\r\n  }\r\n\r\n  redimensionarListaWidth(screen) {\r\n    if (screen <= 597) {\r\n      this.breakpoint = 1;\r\n    } else if (screen <= 870) {\r\n      this.breakpoint = 2;\r\n    } else if (screen <= 1085) {\r\n      this.breakpoint = 3;\r\n    } else {\r\n      this.breakpoint = 4;\r\n    }\r\n  }\r\n\r\n  redimensionarListaHeigth(screen) {\r\n    const heigth = screen - 290;\r\n    console.log(heigth);\r\n    document.getElementById(\"lista\").style.height = heigth + 'px';\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.isLoadingResults = true\r\n    this.api.getDocuments(1, this.filtro_visivility).subscribe((result) => {\r\n      if (result.length > 0) {\r\n        this.documentos = result;\r\n        this.documentos_reser = result;\r\n        this.isLoadingResults = false;\r\n      } else {\r\n        this.documentos = [];\r\n        this.documentos_reser = [];\r\n        this.isLoadingResults = false;\r\n        this.server_message = 'No hay documentos en estos momentos';\r\n      }\r\n      this.iniLista();\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.isLoadingResults = false;\r\n      this.isRateLimitReached = true;\r\n      this.server_message = 'El servidor no esta disponible en estos momentos';\r\n      this.iniLista();\r\n    });\r\n  }\r\n\r\n  onDelete(event) {\r\n    this.loadData();\r\n  }\r\n\r\n  iniLista() {\r\n    if (!this.isLoadingResults) {\r\n      var lista = document.getElementById(\"lista\");\r\n      this.redimensionarListaWidth(lista.clientWidth);\r\n      // this.redimensionarListaHeigth(lista.clientHeight);\r\n    }\r\n  }\r\n\r\n  filtroAll() {\r\n    this.documentos = this.documentos_reser.filter(fil => fil.title.toLowerCase().indexOf(this.filtro.toLowerCase()) !== -1);\r\n    // console.log(this.filtro);\r\n    // console.log(this.documentos,\"*******\",this.documentos_reser );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-ordina-personales',\n  templateUrl: './documentos-ordina-personales.component.html',\n  styleUrls: ['./documentos-ordina-personales.component.css']\n})\nexport class DocumentosOrdinaPersonalesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-ordina-personales works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documentos-ordinarios',\n  templateUrl: './documentos-ordinarios.component.html',\n  styleUrls: ['./documentos-ordinarios.component.css']\n})\nexport class DocumentosOrdinariosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>documentos-ordinarios works!</p>\n","import { ModalPermisosComponent } from './../../../modals/modal-permisos/modal-permisos.component';\r\nimport { ModalRolComponent } from './../../../modals/modal-rol/modal-rol.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from '../../../../service/api.service';\r\nimport { Component, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ModalDeleteComponent } from 'src/app/components/modals/modal-delete/modal-delete.component';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Roles } from 'src/app/models/roles';\r\n\r\n\r\n@Component({\r\n  selector: 'app-table-roles',\r\n  templateUrl: './table-roles.component.html',\r\n  styleUrls: ['./table-roles.component.css']\r\n})\r\nexport class TableRolesComponent implements AfterViewInit {\r\n\r\n  displayedColumns: string[] = ['id', 'rol_name', 'description', 'actions'];\r\n\r\n  toppings = new FormControl();\r\n\r\n  toppingList: string[] = ['description', 'nombre de rol'];\r\n  dataSource: MatTableDataSource<Roles>;\r\n\r\n  resultsLength = 0;\r\n  isLoadingResults = true;\r\n  isRateLimitReached = false;\r\n  pageEvent: PageEvent;\r\n\r\n  filter: string = '';\r\n  filtro_description: string = '';\r\n  filtro_rol_name: string = '';\r\n\r\n\r\n  filtro_description_view: boolean = false;\r\n  filtro_rol_name_view: boolean = false;\r\n\r\n  // Top Bar\r\n  top_bar_title: string = \"Roles\";\r\n  top_bar_subtitle: string = \"Roles registrados\";\r\n  top_bar_icon: string = \"account_box\";\r\n\r\n  sortedData: Roles[];\r\n  array_roles: Roles[];\r\n\r\n  filtros_row: boolean = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  message_server: string = '';\r\n\r\n  constructor(private api: ApiService, private modalService: NgbModal) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  loadData() {\r\n    this.api.ObtenerRoles(this.filtro_rol_name,this.filtro_description).subscribe((result) => {\r\n      if(result.length>0){\r\n      this.isLoadingResults = false;\r\n      this.array_roles = result;\r\n      this.isRateLimitReached = false;\r\n      this.dataSource = new MatTableDataSource(result);\r\n      this.resultsLength = result.length;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n      }else{\r\n        this.array_roles = [];\r\n        this.dataSource = new MatTableDataSource([]);\r\n        this.resultsLength = 0;\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = \"No hay roles registrados\";\r\n      }\r\n    },\r\n      (error) => {\r\n        this.isLoadingResults = false;\r\n        this.isRateLimitReached = true;\r\n        this.message_server = error.error.message;\r\n        // console.log(error)\r\n      });\r\n  }\r\n\r\n  resetPaging(): void {\r\n    this.paginator.pageIndex = 0;\r\n  }\r\n\r\n  registerOrUpdate(event: boolean) {\r\n    this.loadData();\r\n  }\r\n\r\n  actualizarRol(row: Roles) {\r\n    var modal = this.modalService.open(ModalRolComponent);\r\n    modal.componentInstance.modalHeader = \"Rol\";\r\n    modal.componentInstance.modalmessage = \"Debe al menos modificar uno de los campos\";\r\n    modal.componentInstance.modal_action = \"Editar\";\r\n    modal.componentInstance.id = row.id;\r\n    modal.componentInstance.rol_name = row.rol_name;\r\n    modal.componentInstance.description_model = row.description;\r\n\r\n\r\n    // Emitir desde el modal contenido de este al cerrarlo\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  eliminarRol(id: number) {\r\n    var modal = this.modalService.open(ModalDeleteComponent);\r\n    modal.componentInstance.modalHeader = \"Rol\";\r\n    modal.componentInstance.id = id;\r\n    modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n\r\n  filtrarTodo() {\r\n    this.dataSource.filter = this.filter.trim().toLowerCase();\r\n  }\r\n\r\n  // filtrarByUser() {\r\n  //   this.dataSource.filterPredicate = (data: Usuarios, filter: string) => data.user.toLocaleLowerCase().indexOf(filter) != -1;\r\n  //   this.dataSource.filter = this.filtro_usuario.toLocaleLowerCase().trim();\r\n  // }\r\n\r\n  onChangeSelectFilter() {\r\n    this.filtros_row = this.toppings.value.indexOf('description') != -1 || this.toppings.value.indexOf('nombre de rol') != -1;\r\n    this.filtro_description_view = this.toppings.value.indexOf('description') != -1;\r\n    this.filtro_rol_name_view = this.toppings.value.indexOf('nombre de rol') != -1;\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.array_roles.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.sortedData = data;\r\n      return;\r\n    }\r\n\r\n    this.sortedData = data.sort((a, b) => {\r\n      const isAsc = sort.direction === 'asc';\r\n      switch (sort.active) {\r\n        case 'id': return compare(a.id, b.id, isAsc);\r\n        case 'rol_name': return compare(a.rol_name, b.rol_name, isAsc);\r\n        case 'description': return compare(a.description, b.description, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  isSearch(): boolean {\r\n    return this.filtro_description != '' || this.filtro_rol_name != '';\r\n  }\r\n\r\n  asignarPermisos(rol_name: string, rol_id: number){\r\n    var modal = this.modalService.open(ModalPermisosComponent);\r\n    modal.componentInstance.modalHeader = 'Permisos';\r\n    modal.componentInstance.modal_action = 'Asignar';\r\n    modal.componentInstance.rol_name = rol_name;\r\n    modal.componentInstance.rol_id = rol_id;\r\n     // Emitir desde el modal contenido de este al cerrarlo\r\n     modal.result.then((result) => {\r\n      if (result) {\r\n        this.loadData();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n\r\n","<div class=\"full-container bg-dark\">\n\n    <app-top-bar [modal_header]=\"top_bar_title\" [modal_icon]=\"top_bar_icon\" [modal_subheader]=\"top_bar_subtitle\" (emisor)=\"registerOrUpdate($event)\"></app-top-bar>\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                {{message_server}}\n            </div>\n        </div>\n\n        <div class=\"row bg-darkest filtros\" style=\"padding-left: 10px;margin-top: 10px;margin-inline: 0px;\">\n            <div class=\"encabezados-filtros col-md-3\">\n                <mat-label style=\"margin-left: 10px;\" class=\"font-bold\">Filtro: </mat-label>\n                <mat-form-field appearance=\"outline\" class=\"mat-form-field-busqueda\" color=\"warn\">\n                    <mat-label>Escriba el criterio de busqueda</mat-label>\n                    <input matInput #filterall maxlength=\"20\" placeholder=\"nombre completo....\" [(ngModel)]=\"filter\" (ngModelChange)=\"filtrarTodo()\" name=\"filtrotodo\">\n                    <mat-icon matSuffix>search</mat-icon>\n                    <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                    <!-- <mat-hint>Hint</mat-hint> -->\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-5\">\n                <mat-form-field appearance=\"outline\" style=\"margin-top: 20px;\">\n                    <mat-label style=\"color: white;\">busquedas avanzadas</mat-label>\n                    <mat-select [formControl]=\"toppings\" (selectionChange)=\"onChangeSelectFilter()\" multiple>\n                        <mat-select-trigger style=\"color: white;font-size: 11px;\">\n                            {{toppings.value ? toppings.value[0] : ''}}\n                            <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n        (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n      </span>\n                        </mat-select-trigger>\n                        <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <mat-divider></mat-divider>\n        <div class=\"row bg-darkest filtros\" [ngClass]=\"{ 'row-visibility-none':!filtros_row }\" style=\"padding-left: 10px;padding-top: 20px;margin-inline: 0px;\">\n            <mat-form-field *ngIf=\"filtro_description_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Descripcion</mat-label>\n                <input matInput #description_filter maxlength=\"20\" placeholder=\"usuario\" [(ngModel)]=\"filtro_description\" name=\"filtro_description\">\n                <mat-icon matSuffix>description</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"filtro_rol_name_view\" appearance=\"outline\" color=\"warn\">\n                <mat-label>Nombre del rol</mat-label>\n                <input matInput #rol_name_filter maxlength=\"20\" placeholder=\"nombre del rol\" [(ngModel)]=\"filtro_rol_name\" name=\"filtro_rol_name\">\n                <mat-icon matSuffix>account_box</mat-icon>\n                <!-- <mat-hint align=\"end\">{{user.value.length}} / 20</mat-hint> -->\n                <!-- <mat-hint>Hint</mat-hint> -->\n            </mat-form-field>\n\n            <button [disabled]=\"!isSearch()\" style=\"height: 40px;margin-top: 10px;\" mat-raised-button color=\"warn\" flex (click)=\"loadData()\"> <mat-icon class=\"mat-18\" >search</mat-icon>Buscar\n        </button>\n\n\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"example-table-container\">\n\n            <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                <!-- id Column -->\n                <ng-container matColumnDef=\"id\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                </ng-container>\n\n                <!-- rol_name Column -->\n                <ng-container matColumnDef=\"rol_name\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"rol_name\" *matHeaderCellDef>Nombre del rol</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.rol_name}}</td>\n                </ng-container>\n\n                <!-- description Column -->\n                <ng-container matColumnDef=\"description\">\n                    <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"description\" *matHeaderCellDef>Descripcion</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.description}}</td>\n                </ng-container>\n\n                <!-- action Column -->\n                <ng-container matColumnDef=\"actions\">\n                    <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\n                    <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                        <button type=\"button\" matTooltip=\"Editar\" class=\"btn btn-outline-warning\" (click)=\"actualizarRol(row)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n                        <button type=\"button\" matTooltip=\"Asignar permisos\" class=\"btn btn-outline-success\" (click)=\"asignarPermisos(row.rol_name, row.id)\">\n          <mat-icon>assignment</mat-icon>\n        </button>\n                        <button type=\"button\" matTooltip=\"Eliminar\" class=\"btn btn-outline-danger\" (click)=\"eliminarRol(row.id)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n                    </td>\n                </ng-container>\n\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </div>\n\n        <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"5\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n        </mat-paginator>\n    </div>\n</div>","import { ModalUserHistoryComponent } from './../../modals/modal-user-history/modal-user-history.component';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { UserOnline } from './../../../models/useronline';\nimport { ApiService } from './../../../service/api.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-history-user',\n  templateUrl: './history-user.component.html',\n  styleUrls: ['./history-user.component.css']\n})\nexport class HistoryUserComponent implements OnInit, OnDestroy {\n\n  displayedColumns: string[] = ['id', 'user', 'estado', 'actions'];\n  dataSource: MatTableDataSource<UserOnline>;\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  message_server: string = 'Hoalasds';\n  interval: any;\n  title: string = 'Historial';\n  icon: string = 'event_note';\n  subtitle: string = 'Muestra el historial de todos los usuarios';\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private api: ApiService, private modalService: NgbModal) { }\n\n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.interval = setInterval(() => {\n      this.loadData();\n    }, 5000);\n  }\n\n  loadData() {\n    this.api.getUsersOnline().subscribe((result) => {\n      if (result.length > 0) {\n        this.dataSource = new MatTableDataSource(result);\n        this.resultsLength = result.length;\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.isLoadingResults = false;\n      }\n      else {\n        this.dataSource = new MatTableDataSource([]);\n        this.resultsLength = 0;\n        this.isRateLimitReached = true;\n        this.isLoadingResults = false;\n        this.message_server = 'no hay usuarios registrados';\n      }\n    }, (error) => {\n      this.message_server = error.error.message;\n      this.isLoadingResults = false;\n      this.isRateLimitReached = true;\n      this.resultsLength = 0;\n    });\n  }\n\n\n  verHistorial(item) {\n    const modal = this.modalService.open(ModalUserHistoryComponent, {backdrop: 'static'});\n    modal.componentInstance.user_id = item.user_id;\n    modal.componentInstance.user = item.username;\n  }\n}\n","<div class=\"full-container bg-dark\">\n\n    <app-top-bar [modal_header]=\"title\" [modal_icon]=\"icon\" [modal_subheader]=\"subtitle\" [withAddButton]=\"false\">\n    </app-top-bar>\n\n    <div class=\"example-container mat-elevation-z4 bg-dark\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" *ngIf=\"isRateLimitReached\">\n                {{message_server}}\n            </div>\n        </div>\n        <div class=\"example-container mat-elevation-z4 bg-dark\">\n            <div class=\"example-table-container\">\n                <table mat-table [dataSource]=\"dataSource\" class=\"example-table\" matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\" matSort>\n                    <!-- id Column -->\n                    <ng-container matColumnDef=\"id\">\n                        <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"id\" *matHeaderCellDef>id</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">{{row.id}}</td>\n                    </ng-container>\n\n                    <!-- user column -->\n                    <ng-container matColumnDef=\"user\">\n                        <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"user\" *matHeaderCellDef>Usuario</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                            {{row.username}}</td>\n                    </ng-container>\n\n                    <!--state column -->\n                    <ng-container matColumnDef=\"estado\">\n                        <th class=\"bg-darkest\" mat-header-cell mat-sort-header=\"estado\" *matHeaderCellDef>Estado</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                            <mat-icon matTooltip=\"activo\" *ngIf=\"row.estado == 'activo'\" class=\"text-success\">wifi</mat-icon>\n                            <mat-icon matTooltip=\"inactivo\" *ngIf=\"row.estado == 'inactivo'\" class=\"text-danger\">signal_wifi_off</mat-icon>\n                        </td>\n                    </ng-container>\n\n                    <!-- action Column -->\n                    <ng-container matColumnDef=\"actions\">\n                        <th class=\"bg-darkest\" mat-header-cell *matHeaderCellDef>Acciones</th>\n                        <td class=\"bg-dark\" mat-cell *matCellDef=\"let row\">\n                            <button type=\"button\" matTooltip=\"ver historial\" class=\"btn btn-outline-primary\" (click)=\"verHistorial(row)\">\n        <mat-icon>timeline</mat-icon>\n      </button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                </table>\n            </div>\n\n            <mat-paginator class=\"bg-darkest\" [length]=\"resultsLength\" [pageSize]=\"7\" [pageSizeOptions]=\"[5, 7, 15, 20, 30]\">\n            </mat-paginator>\n\n        </div>\n    </div>","import { FormGroup, FormControl } from '@angular/forms';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalDeleteComponent } from './../../../../modals/modal-delete/modal-delete.component';\nimport { ApiService } from './../../../../../service/api.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ModalDocumentLimitadoComponent } from 'src/app/components/modals/modal-document-limitado/modal-document-limitado.component';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-documento-limitado-item',\n  templateUrl: './documento-limitado-item.component.html',\n  styleUrls: ['./documento-limitado-item.component.css']\n})\nexport class DocumentoLimitadoItemComponent implements OnInit {\n\n  @Input() id: number = -1;\n  @Input() src_document: string = 'ctc.png';\n  @Input() fecha: string = '';\n  @Input() titulo: string = '';\n  @Input() no: number = -1;\n  @Input() procedencia: string = '';\n  @Input() movimiento1: string = '';\n  @Input() movimiento2: string = '';\n  @Input() destruccion: string = '';\n  @Input() expediente: string = '';\n  @Input() observacion: string = '';\n  @Output() emisor: EventEmitter<boolean> = new EventEmitter();\n  constructor(private api: ApiService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n\n    this.api.getDocumentsLimitFoto(this.id).subscribe((result) => {\n      this.src_document = result + '';\n    }, (error) => {\n      this.src_document = error.url;\n    })\n  }\n\n  deleteDocument() {\n    var modal = this.modalService.open(ModalDeleteComponent);\n    modal.componentInstance.modalHeader = \"Documento Limitado\";\n    modal.componentInstance.id = this.id;\n    modal.result.then((result) => {\n      if (result) {\n        this.emisor.emit(true);\n      }\n    });\n  }\n\n  updateDocument() {\n    const modal = this.modalService.open(ModalDocumentLimitadoComponent, { backdrop: false });\n    let form_document = new FormGroup({\n      id: new FormControl(this.id),\n      no: new FormControl(this.no),\n      titulo: new FormControl(this.titulo),\n      fecha: new FormControl(this.fecha),\n      procedencia: new FormControl(this.procedencia),\n      movimiento1: new FormControl(this.movimiento1),\n      movimiento2: new FormControl(this.movimiento2),\n      destruccion: new FormControl(this.destruccion),\n      expediente: new FormControl(this.expediente),\n      observacion: new FormControl(this.observacion),\n      imagen: new FormControl(this.no),\n    });\n    modal.componentInstance.modalHeader = \"Documentos Limitados\";\n    modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\n    modal.componentInstance.modal_action = \"Editar\";\n    modal.componentInstance.form_document = form_document;\n    modal.componentInstance.src_document = this.src_document;\n    modal.result.then((result) => {\n      if (result) {\n        this.emisor.emit(true);\n      }\n    });\n  }\n}\n","<mat-card class=\"bg-darkest item-document\" style=\"width: 400px;height: 300px;max-width: 270px;\">\n    <mat-card-header>\n        <div class=\"bubble\" name=\"no\" class=\"text-danger\" mat-card-avatar>\n        </div>\n\n        <button mat-icon-button style=\"position: absolute;right: 5px;top: 5px;\" [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n        <mat-menu #menu=\"matMenu\" class=\"bg-dark\">\n            <button mat-menu-item (click)=\"updateDocument()\" style=\"color: white;\">actualizar</button>\n            <button mat-menu-item (click)=\"deleteDocument()\" style=\"color: white;\">eliminar</button>\n        </mat-menu>\n    </mat-card-header>\n    <div class=\"text-center\">\n        <img mat-card-image style=\"height: 150px;width: 100%;\" [src]=\"src_document\">\n    </div>\n    <mat-card-content class=\"texto\" style=\"font-size: small; margin-top: 10px;\">\n        <mat-card-title style=\"font-size: medium;color: #f44336;\">{{titulo}}</mat-card-title>\n        <p>{{fecha}}</p>\n        <p>{{expediente}}</p>\n    </mat-card-content>\n\n    <mat-card-actions align=\"start\">\n        <!-- <button mat-button >Action1</button> -->\n    </mat-card-actions>\n</mat-card>","<div class=\"bg-dark full-container\">\n    <app-top-bar [modal_header]=\"title\" [modal_icon]=\"icon\" [modal_subheader]=\"subtitle\" (emisor)=\"registerOrUpdateOrDelete($event)\">\n    </app-top-bar>\n\n    <div class=\"row bg-darkest filtros mat-elevation-z4\" style=\"padding: 10px;margin-top: 10px;margin-inline: 0px; height: 70px;\">\n        <div class=\"col-md-10\">\n\n        </div>\n        <div class=\"col-md-2\">\n            <section style=\"position: absolute; right: 0;margin-right: 15px;\">\n                <mat-form-field appearance=\"outline\" color=\"warn\">\n                    <mat-label>Filtrar por titulo</mat-label>\n                    <input style=\"color: white;\" matInput placeholder=\"Escriba criterio de busqueda ...\" [(ngModel)]=\"filtro\" name=\"filtro\" (ngModelChange)=\"filtroAll()\">\n                    <mat-icon matSuffix>search</mat-icon>\n                </mat-form-field>\n            </section>\n        </div>\n    </div>\n\n    <div class=\"lista-document\" id=\"lista\">\n        <div class=\"example-loading-shade\" *ngIf=\"isLoadingResults || isRateLimitReached\">\n            <mat-spinner *ngIf=\"isLoadingResults\" color=\"warn\"></mat-spinner>\n            <div class=\"example-rate-limit-reached\" style=\"color: #f44336;\" *ngIf=\"isRateLimitReached\">\n                {{server_message}}\n            </div>\n        </div>\n        <mat-grid-list *ngIf=\"!isLoadingResults\" [cols]=\"breakpoint\" rowHeight=\"1.6:2\" (window:resize)=\"onResize($event)\">\n            <mat-grid-tile *ngFor=\"let item of documentos\">\n                <app-documento-limitado-item [id]=\"item.id\" [no]=\"item.no\" [titulo]=\"item.titulo\" [fecha]=\"item.fecha\" [procedencia]=\"item.procedencia\" [movimiento1]=\"item.movimiento1\" [movimiento2]=\"item.movimiento2\" [destruccion]=\"item.destruccion\" [expediente]=\"item.expediente\"\n                    [observacion]=\"item.observacion\" (emisor)=\"registerOrUpdateOrDelete($event)\"></app-documento-limitado-item>\n            </mat-grid-tile>\n        </mat-grid-list>\n    </div>\n</div>","import { ApiService } from './../../../../service/api.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-documento-limitado',\n  templateUrl: './documento-limitado.component.html',\n  styleUrls: ['./documento-limitado.component.css']\n})\nexport class DocumentoLimitadoComponent implements OnInit {\n\n  title: string = 'Documentos Limitados';\n  subtitle: string = 'Vista privada no para todos los usuarios';\n  icon: string = 'assignment';\n  documentos: any[] = [];\n  documentos_reser: any[] = [];\n  breakpoint;\n  server_message;\n  isLoadingResults: boolean = true;\n  isRateLimitReached: boolean = false;\n  filtro_visivility: string = 'pyp';\n  filtro: string = '';\n\n  constructor(private api: ApiService) { }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  registerOrUpdate(event){\n\n  }\n\n  loadData() {\n    this.isLoadingResults = true\n    this.api.getDocumentsLimit(1).subscribe((result) => {\n      if (result.length > 0) {\n        this.documentos = result;\n        this.documentos_reser = result;\n        this.isLoadingResults = false;\n      } else {\n        this.documentos = [];\n        this.documentos_reser = [];\n        this.isLoadingResults = false;\n        this.server_message = 'No hay documentos en estos momentos';\n      }\n      this.iniLista();\n    }, (error) => {\n      console.log(error);\n      this.isLoadingResults = false;\n      this.isRateLimitReached = true;\n      this.server_message = 'El servidor no esta disponible en estos momentos';\n      this.iniLista();\n    });\n  }\n\n  onResize(event) {\n    const screenWidth = event.target.innerWidth;\n    const screenHeigth = event.target.innerHeight;\n    this.redimensionarListaWidth(screenWidth);\n    this.redimensionarListaHeigth(screenHeigth);\n    // this.breakpoint = (event.target.innerWidth <= 500) ? 1 : 4;\n  }\n\n  redimensionarListaWidth(screen) {\n    if (screen <= 597) {\n      this.breakpoint = 1;\n    } else if (screen <= 870) {\n      this.breakpoint = 2;\n    } else if (screen <= 1085) {\n      this.breakpoint = 3;\n    } else {\n      this.breakpoint = 4;\n    }\n  }\n\n  redimensionarListaHeigth(screen) {\n    const heigth = screen - 290;\n    // console.log(heigth);\n    document.getElementById(\"lista\").style.height = heigth + 'px';\n  }\n\n  iniLista() {\n    if (!this.isLoadingResults) {\n      var lista = document.getElementById(\"lista\");\n      this.redimensionarListaWidth(lista.clientWidth);\n      // this.redimensionarListaHeigth(lista.clientHeight);\n    }\n  }\n\n  onDelete(event) {\n    this.loadData();\n  }\n\n  filtroAll() {\n    this.documentos = this.documentos_reser.filter(fil => fil.title.toLowerCase().indexOf(this.filtro.toLowerCase()) !== -1);\n    // console.log(this.filtro);\n    // console.log(this.documentos,\"*******\",this.documentos_reser );\n  }\n\n  registerOrUpdateOrDelete(event){\n    if(event){\n      this.loadData();\n    }\n  }\n\n}\n","import { ModalDocumentLimitadoComponent } from './../modals/modal-document-limitado/modal-document-limitado.component';\r\nimport { ModalDocumentComponent } from './../modals/modal-document/modal-document.component';\r\nimport { ModalPermisosComponent } from './../modals/modal-permisos/modal-permisos.component';\r\nimport { ModalRolComponent } from './../modals/modal-rol/modal-rol.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Component, Input, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { ModalUsuarioComponent } from '../modals/modal-usuario/modal-usuario.component';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n  @Input() modal_icon = 'build';\r\n  @Input() modal_subheader = 'Subtitle';\r\n  @Input() modal_header: string = \"title\";\r\n  @Input() withAddButton: boolean = true;\r\n\r\n  @Output() emisor: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private modalService: NgbModal) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openModal() {\r\n    console.log(this.modal_header);\r\n    switch (this.modal_header) {\r\n      case \"Usuario\":\r\n        var modal = this.modalService.open(ModalUsuarioComponent);\r\n        modal.componentInstance.modalHeader = \"Nuevo usuario\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        // Emitir desde el modal contenido de este al cerrarlo\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case \"Roles\":\r\n        var modal = this.modalService.open(ModalRolComponent);\r\n        modal.componentInstance.modalHeader = \"Nuevo Rol\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        // Emitir desde el modal contenido de este al cerrarlo\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case \"Permisos\":\r\n        var modal = this.modalService.open(ModalPermisosComponent);\r\n        modal.componentInstance.modalHeader = \"permisos\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Asignar\";\r\n        // Emitir desde el modal contenido de este al cerrarlo\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case 'Documentos Secretos':\r\n        var modal = this.modalService.open(ModalDocumentComponent, { size: 'sm' });\r\n        modal.componentInstance.modalHeader = \"documentos\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n        break;\r\n      case 'Documentos Limitados':\r\n        var modal = this.modalService.open(ModalDocumentLimitadoComponent, { backdrop: false});\r\n        modal.componentInstance.modalHeader = \"Documentos limitados\";\r\n        modal.componentInstance.modalmessage = \"Se debe rellenar todos los campos marcados con un asterisco\";\r\n        modal.componentInstance.modal_action = \"Agregar\";\r\n        modal.result.then((result) => {\r\n          if (result) {\r\n            this.registerOrUpdate();\r\n          }\r\n        });\r\n      default:\r\n        console.log(\"default\");\r\n    }\r\n  }\r\n\r\n  registerOrUpdate() {\r\n    this.emisor.emit(true);\r\n  }\r\n\r\n}\r\n","<div class=\"back bg-darkest mat-elevation-z4\" style=\"color: black;\">\r\n    <mat-card>\r\n        <mat-card-header>\r\n            <mat-card-title>\r\n\r\n            </mat-card-title>\r\n        </mat-card-header>\r\n        <mat-card-content>\r\n\r\n            <div class=\"row deep-orange\" style=\"height: 35px;\">\r\n                <mat-icon style=\"font-size: 20px; padding-left: 10px;\">{{modal_icon}}</mat-icon>\r\n                <span style=\"font-size: 15px; padding-left: 10px;\">{{modal_header}}</span>\r\n\r\n                <button *ngIf=\"withAddButton\" style=\"padding-left: 10px;\" mat-raised-button color=\"warn\" flex class=\"ml-auto icon-in-menu\" (click)=\"openModal()\">\r\n          <mat-icon class=\"mat-18\">add_box</mat-icon>Agregar {{modal_header}}\r\n        </button>\r\n            </div>\r\n\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","import { Router } from '@angular/router';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\nimport { ApiService } from './../../../service/api.service';\r\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sidenav-home',\r\n  templateUrl: './sidenav-home.component.html',\r\n  styleUrls: ['./sidenav-home.component.css']\r\n})\r\nexport class SidenavHomeComponent implements OnInit, AfterViewInit {\r\n\r\n  id_usuario: number = -1;\r\n  user: string = '';\r\n  rol: string = '';\r\n  nombre: string = '';\r\n  src_avatar;\r\n  loadingAvatar: boolean = false;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver, private storage: SessionStorageService, private api: ApiService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    try {\r\n      var usuario = this.storage.retrieve('usuario');\r\n      this.id_usuario = usuario.id;\r\n      this.user = usuario.user;\r\n      this.nombre = usuario.full_name;\r\n      this.rol = usuario.rol_name;\r\n\r\n      this.api.getAvatarUser(this.id_usuario).subscribe((result) => {\r\n        this.src_avatar = result;\r\n      }, (error) => {\r\n        this.src_avatar = error.url;\r\n      });\r\n    } catch (e) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.finishLoading();\r\n    }, 1500);\r\n  }\r\n\r\n  finishLoading() {\r\n    this.loadingAvatar = true;\r\n  }\r\n}\r\n","<mat-sidenav-container class=\"sidenav-content bg-darkest\" style=\"\">\r\n    <mat-sidenav #drawer class=\"sidenav  bg-darkest\" fixedInViewport [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\" mode=\"side\" [opened]=\"(isHandset$ | async) === false\" style=\"margin-top: 32px\">\r\n        <mat-toolbar class=\"deep-orange\">\r\n            <!-- <mat-icon class=\"example-header-image\" matTooltip=\"{{nombre}}\">account_circle</mat-icon> -->\r\n            <div class=\"example-loading-shade rounded-circle\" [hidden]=\"loadingAvatar\">\r\n                <mat-spinner color=\"warn\" [hidden]=\"loadingAvatar\" [diameter]=\"50\" class=\"rounded-circle loading\"></mat-spinner>\r\n            </div>\r\n            <img [hidden]=\"!loadingAvatar\" src=\"{{src_avatar}}\" class=\"rounded-circle\" style=\"width: 50px;height: 50px; margin-right: 10px;padding: 0.1px;background-color: white;\" matTooltip=\"{{nombre}}\">\r\n            <div style=\"display: block;\">\r\n                <section style=\"font-size: 15px;\">{{user}}</section>\r\n                <section style=\"font-size: 10px;\">{{rol}}</section>\r\n            </div>\r\n        </mat-toolbar>\r\n        <mat-nav-list>\r\n            <app-menu></app-menu>\r\n            <div style=\"position: absolute;right: 0;left: 0;bottom: 0;margin: 5px;font-size: smaller;\"><strong>Copyright Kuroko 2022</strong>\r\n                <p> version 2.1.00</p>\r\n            </div>\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <mat-toolbar class=\"deep-orange\">\r\n            <button type=\"button\" aria-label=\"Toggle sidenav\" mat-icon-button (click)=\"drawer.toggle()\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n            <span>Sistema</span>\r\n            <!-- <div class=\"login-icon-toolbar\">\r\n              <mat-icon>account_circle</mat-icon>\r\n            </div> -->\r\n        </mat-toolbar>\r\n        <!-- Add Content Here -->\r\n        <router-outlet></router-outlet>\r\n\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = \".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\";\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() { return this.rowIndex + 1; }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while ((gapEndIndex - gapStartIndex < tileCols) || (gapEndIndex == 0));\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridTile {\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() { return this._rowspan; }\n    set rowspan(value) { this._rowspan = Math.round(coerceNumberProperty(value)); }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() { return this._colspan; }\n    set colspan(value) { this._colspan = Math.round(coerceNumberProperty(value)); }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n        this._element.nativeElement.style[property] = value;\n    }\n}\nMatGridTile.ɵfac = function MatGridTile_Factory(t) { return new (t || MatGridTile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_GRID_LIST, 8)); };\nMatGridTile.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTile, selectors: [[\"mat-grid-tile\"]], hostAttrs: [1, \"mat-grid-tile\"], hostVars: 2, hostBindings: function MatGridTile_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n    } }, inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, exportAs: [\"matGridTile\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-figure\"]], template: function MatGridTile_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"figure\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [_c3], encapsulation: 2, changeDetection: 0 });\nMatGridTile.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_GRID_LIST,] }] }\n];\nMatGridTile.propDecorators = {\n    rowspan: [{ type: Input }],\n    colspan: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTile, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile',\n                exportAs: 'matGridTile',\n                host: {\n                    'class': 'mat-grid-tile',\n                    // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                    // the DOM. This is needed for the grid-tile harness.\n                    '[attr.rowspan]': 'rowspan',\n                    '[attr.colspan]': 'colspan'\n                },\n                template: \"<!-- TODO(kara): Revisit why this is a figure.-->\\n<figure class=\\\"mat-figure\\\">\\n  <ng-content></ng-content>\\n</figure>\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_GRID_LIST]\n            }] }]; }, { rowspan: [{\n            type: Input\n        }], colspan: [{\n            type: Input\n        }] }); })();\nclass MatGridTileText {\n    constructor(_element) {\n        this._element = _element;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n}\nMatGridTileText.ɵfac = function MatGridTileText_Factory(t) { return new (t || MatGridTileText)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatGridTileText.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridTileText, selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]], contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, ngContentSelectors: _c2, decls: 4, vars: 0, consts: [[1, \"mat-grid-list-text\"]], template: function MatGridTileText_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatGridTileText.ctorParameters = () => [\n    { type: ElementRef }\n];\nMatGridTileText.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileText, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n                template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }] }); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n}\nMatGridAvatarCssMatStyler.ɵfac = function MatGridAvatarCssMatStyler_Factory(t) { return new (t || MatGridAvatarCssMatStyler)(); };\nMatGridAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridAvatarCssMatStyler, selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], hostAttrs: [1, \"mat-grid-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-grid-avatar], [matGridAvatar]',\n                host: { 'class': 'mat-grid-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n}\nMatGridTileHeaderCssMatStyler.ɵfac = function MatGridTileHeaderCssMatStyler_Factory(t) { return new (t || MatGridTileHeaderCssMatStyler)(); };\nMatGridTileHeaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileHeaderCssMatStyler, selectors: [[\"mat-grid-tile-header\"]], hostAttrs: [1, \"mat-grid-tile-header\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-header',\n                host: { 'class': 'mat-grid-tile-header' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n}\nMatGridTileFooterCssMatStyler.ɵfac = function MatGridTileFooterCssMatStyler_Factory(t) { return new (t || MatGridTileFooterCssMatStyler)(); };\nMatGridTileFooterCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatGridTileFooterCssMatStyler, selectors: [[\"mat-grid-tile-footer\"]], hostAttrs: [1, \"mat-grid-tile-footer\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-grid-tile-footer',\n                host: { 'class': 'mat-grid-tile-footer' }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() { return null; }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() { return this._cols; }\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() { return this._gutter; }\n    set gutterSize(value) { this._gutter = `${value == null ? '' : value}`; }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() { return this._rowHeight; }\n    set rowHeight(value) {\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n        if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` +\n                `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        const tracker = this._tileCoordinator;\n        const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((tile, index) => {\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    }\n}\nMatGridList.ɵfac = function MatGridList_Factory(t) { return new (t || MatGridList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8)); };\nMatGridList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatGridList, selectors: [[\"mat-grid-list\"]], contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatGridTile, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tiles = _t);\n    } }, hostAttrs: [1, \"mat-grid-list\"], hostVars: 1, hostBindings: function MatGridList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"cols\", ctx.cols);\n    } }, inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, exportAs: [\"matGridList\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList\n            }])], ngContentSelectors: _c0, decls: 2, vars: 0, template: function MatGridList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [_c3], encapsulation: 2, changeDetection: 0 });\nMatGridList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatGridList.propDecorators = {\n    _tiles: [{ type: ContentChildren, args: [MatGridTile, { descendants: true },] }],\n    cols: [{ type: Input }],\n    gutterSize: [{ type: Input }],\n    rowHeight: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-grid-list',\n                exportAs: 'matGridList',\n                template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n                host: {\n                    'class': 'mat-grid-list',\n                    // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                    // needed for the grid-list harness.\n                    '[attr.cols]': 'cols'\n                },\n                providers: [{\n                        provide: MAT_GRID_LIST,\n                        useExisting: MatGridList\n                    }],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-figure{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { cols: [{\n            type: Input\n        }], gutterSize: [{\n            type: Input\n        }], rowHeight: [{\n            type: Input\n        }], _tiles: [{\n            type: ContentChildren,\n            args: [MatGridTile, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatGridListModule {\n}\nMatGridListModule.ɵfac = function MatGridListModule_Factory(t) { return new (t || MatGridListModule)(); };\nMatGridListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatGridListModule });\nMatGridListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatLineModule, MatCommonModule], MatLineModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatGridListModule, { declarations: function () { return [MatGridList, MatGridTile, MatGridTileText, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; }, imports: function () { return [MatLineModule, MatCommonModule]; }, exports: function () { return [MatGridList, MatGridTile, MatGridTileText, MatLineModule,\n        MatCommonModule, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatGridListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatCommonModule],\n                exports: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ],\n                declarations: [\n                    MatGridList,\n                    MatGridTile,\n                    MatGridTileText,\n                    MatGridTileHeaderCssMatStyler,\n                    MatGridTileFooterCssMatStyler,\n                    MatGridAvatarCssMatStyler\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator, MAT_GRID_LIST as ɵangular_material_src_material_grid_list_grid_list_a };\n\n//# sourceMappingURL=grid-list.js.map"],"sourceRoot":"webpack:///"}